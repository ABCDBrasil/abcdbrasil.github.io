{"0": {
    "doc": "About",
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com . You can find the source code for Minima at GitHub: jekyll / minima . You can find the source code for Jekyll at GitHub: jekyll / jekyll . ",
    "url": "https//abcdbrasil.github.io/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Criando uma nova base de dados no ABCD",
    "content": "O ABCD é composto por 3 módulos principais: central, circulação e aquisição. ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/",
    "relUrl": "/docs/criando-uma-base/"
  },"2": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Tabela de conteúdo",
    "content": ". | Criando uma nova base de dados a partir do zero . | Editando a FDT . | Definindo os campos | . | . | Definição da FST | Editor de planilha de entrada de dados | Editor de PFT | Copiando uma base WinISIS existente | Copiando uma base de dados ABCD existente | . Após a seleção da opção de menu “Criar Base de Dados” , os seguintes elementos precisam ser especificados: . Na primeira caixa, o software pede o “nome da base de dados”, que será o nome real do arquivo interno da nova base de dados. Esses nomes não estão limitados ao antigo estilo de nomes de 6 caracteres do CDS/ISIS ou WinISIS, mas nomes curtos ainda são preferíveis. O nome, tal como apresentado para os usuários, será especificado na caixa 2: a “descrição”. Dica Nomes e descrições de bases de dados podem ser observados diretamente no arquivo ‘bases.tab” da pasta \\ABCD\\www\\bases. Neste arquivo cada base de dados, disponível aos usuários, tem uma linha com os dois valores: o “nome” e a “descrição”, separados por uma barra vertical (“|”). A terceira caixa sempre fornece a opção de “nova bases de dados” – que significa a criação de uma base de dados a partir do zero – e “Base de Dados WinISIS” – significando copiar a estrutura existente de uma base (Win)ISIS, ou, de facto, de qualquer base de dados ISIS com uma FDT, FST e PFT. Também as bases de dados existentes serão fornecidas como modelos básicos a serem utilizados para criar a nova base de dados. Trataremos somente das 2 primeiras opções, visto que a cópia de uma base de dados ABCD existente é bastante simples (ABCD simplesmente cria o base de dados, copiando todos os arquivos necessários para suas pastas apropriadas e adicionando a nova base de dados à lista de bases de dados existentes). A criação de uma nova base de dados “do zero”, significando: não será baseada em um modelo existente, mas a partir de um base-zero, envolve uma boa compreensão de algumas técnicas ISIS, especialmente a linguagem de formatação, pois vai ser utilizada não só na criação do formato de apresentação da nova base de dados, mas também em vários atributos de campos específicos do ABCD (FDT e planilha de entrada) e FST para a indexação. ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#tabela-de-conte%C3%BAdo",
    "relUrl": "/docs/criando-uma-base/#tabela-de-conteúdo"
  },"3": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Criando uma nova base de dados a partir do zero",
    "content": "Editando a FDT . Desde a versão 1.0 do ABCD duas interfaces são fornecidas para a edição da FDT: uma completa e uma comprimida. A forma comprimida, não mostrará os subcampos a menos que o próprio campo seja selecionado pelo seu link na primeira coluna – os subcampos, então, vão aparecer no formulário subsequente, onde todos os detalhes dos subcampos podem ser editados, por exemplo, a largura das colunas como “nº de colunas”, se subcampos devem ser apresentados em uma tabela em vez de campos de entrada separados (que é o tipo padrão de entrada: Texto/Área de texto). Este editor comprimido é bastante prático e mais rápido no caso de estruturas grandes e complexas (isto é, usando muitos subcampos como o MARC). Para outras estruturas mais simples, o editor de FDT completo pode ser usado. No caso de o editor FDT completo ser selecionado ou, quando no editor comprimido, um campo é apresentado no formulário detalhado, o link na primeira coluna pode ser usado para mostrar o campo de uma forma “vertical” detalhada, apresentando assim apenas o campo selecionado em um formulário normal. Isso novamente é mais prático para lidar com os elementos individuais a serem definidos. A tela do editor de FDT é provavelmente um dos mais complicados do ABCD, que apresenta uma FDT vazia, mas visto que no ABCD esta FDT também define a planilha para entrada de dados (ou catalogação), ao contrário de outros softwares ISIS em que uma “FMT” (planilha de entrada de dados) separada, mais simples é definida, e uma vez que além disto ABCD usa alguns recursos de entrada de dados mais avançados, como picklists e validações, esta etapa é bastante exigente. Dica A fim de “editar” o formulário, clique duas vezes em uma célula da tabela! Um clique simples apenas seleciona a linha, mas não faz a célula editável ou não invoca o menu vinculado à célula. Vamos lidar agora com cada “coluna” da tabela, mas para um teste simples, pode ser suficiente simplesmente usar apenas as primeiras 11 colunas e as 2 últimas, a parte restante sendo dedicada à definição opcional de picklists . Definindo os campos . Coluna 1: é apenas um número, atribuído pelo sistema. Ele pode ser usado, no entanto, se assim se desejar, para abrir a linha em uma nova janela para apresentar todas as colunas como caixas separadas para interagir, clicando sobre o hiperlink do próprio número. Tal apresentação de uma linha vazia fica assim: . Coluna 2: é sobre o “tipo” de campo, que pode ser um dos seguintes tipos: . | Campo: a unidade básica em um registro, que deve ser utilizada se o elemento NÃO for um dos seguintes tipos: um subcampo, um campo fixo, um campo fixo-MARC ou líder, ou um “grupo” que é um campo repetitivo com subcampos. | Auto incrementar: este é um campo especial que normalmente o próprio sistema irá gerenciar, tomando o número de um pequeno arquivo “control_number.cn” da pasta “data” da base de dados, e adiciona 1 para cada registro subsequente que usa este campo. Quando, por alguma razão especial, esta numeração automática precisa ser alterada manualmente, o link “Atribuir” permitirá fazer isto. | Subcampo: quando anteriormente foi criado um campo com valores para subcampos na coluna “subcampos” (ver abaixo), ABCD espera que posteriormente todos os subcampos sejam imediatamente descritos, seguindo ao campo ao qual pertencem. O identificador de subcampo então tem que ser colocado na coluna “subcampos” e a descrição do subcampo na coluna “Título”. Indicadores como utilizados em estruturas MARC devem ser tratados como subcampos, mas com identificadores numéricos. | Campo fixo: permite criar um campo simples, com um tamanho fixo. | Data (MARC 005): esta é a data especial do campo com tag 005, usado no MARC. | MARC-Líder: a estrutura de tamanho fixo do campo Leader do MARC. É oferecido suporte dedicado para cada posição deste campo especial. | Grupo: este é um campo com subcampos. Deve ser seguido imediatamente com os subcampos pertencentes ao grupo, mas cada série de subcampos é repetível. Um exemplo típico de um grupo é o “author” – campo com uma definição do autor contém principalmente diversas “partes” subcampos ou como nome, primeiro nome, papel etc. e documentos, em princípio, pode ter mais de um autor, portanto, este campo deve ser repetitivo. Os dados da “mesa” elemento de entrada é bastante adequado para representar um campo tão complicado em um formulário de entrada de dados: cada linha da tabela será uma repetição do campo e as colunas representam os subcampos. O tamanho das colunas pode ser definido como a “fila” parâmetro da linha primeira definição subcampo. O número de linhas na tabela de ocorrências vai definir quantas pessoas serão mostradas, mas ABCD sempre adiciona uma linha vazia para permitir a criação de ocorrências adicionais. | Linha: é apenas um elemento gráfico para separar campos na planilha de entrada de dados. Não precisa de nenhuma outra especificação. | Cabeçalho: é um texto curto, que pode definir uma “seção” na planilha de entrada de dados a fim de agrupar campos; ABCD fornecerá automaticamente hyperlinks dentro do formulário para navegar diretamente para qualquer uma das posições definidas. Em MARC um cabeçalho típico pode ser, por exemplo, “Entrada principal” ou “Entradas secundárias”. | Operador e Data: este campo será automaticamente preenchido pelo ABCD, com o nome do registrado logado que edita o registro e a data da criação. | . Coluna 3: é utilizada para definir a “tag” ou o identificador numérico do campo, conforme exigido pela norma ISO-2709. Estes números variam de 1 a 999. ABCD (como faz CISIS) usa muitos campos internamente com valores superiores a 1000, sendo a maioria de uso temporário. Tags de campo podem ser arbitrários (por exemplo, 1, 2, 3) mas muitas vezes devem ser respeitadas normas existentes, por exemplo, MARC21 usa “245” para o campo de título principal. É de responsabilidade de quem define a estrutura decidir sobre uma lista apropriada de tags de campo. Coluna 4: permite identificar o campo com um “nome” ou “título”, a fim de explicar o significado do campo. Aqui qualquer descrição – de preferência curta – no idioma atual pode ser usada. **Nota ABCD, ao contrário do WinISIS e outras variantes ISIS, permite a criação de FDT para cada idioma utilizado, de forma que os nomes podem ser dependentes do idioma! ** . Coluna 5: permite selecionar um - e apenas um! - campo em uma base de dados para ser usado como o campo “I”dentificador no qual a lista (ver, por exemplo, a “ferramenta de seleção A-Z”) será baseada. Isto não é o mesmo que o campo “chave primária” em bancos de dados relacionais, mas sim, define o campo marcado como “I” – já que esta coluna permite apenas “ativar” ou “desativar” – e, portanto, a ser utilizado para classificar os registros para seleção direta. Coluna 6: como a anterior, só permite “ativação” ou “desativação”, neste caso para indicar se um campo é repetitivo ou não. Esta é uma decisão importante a tomar, de acordo com o ponto de vista de quem define, quanto à estrutura de dados, mas raciocínios diferentes podem ser aplicados. Por exemplo, em uma estrutura simples, o campo de “título” poderia ser considerado “repetitivo” para incluir também todos os tipos de títulos (por exemplo, subtítulos, títulos traduzidos, originais) a fim de apresentar aos usuários apenas um campo de “título”. O formato MARC requer que todos os tipos de títulos sejam definidos em campos diferentes, mas ainda assim se prefere o campo de título principal repetitivo! Em caso de qualquer dúvida, sugerimos definir os campos como repetitivos, pois é mais fácil usar um campo repetitivo apenas uma vez, em vez de exibir repetições corretamente de um campo definido como não repetitivo (nesse caso, a definição de campo tem que ser mudado na FDT e a PFT precisa ser ajustada!). Coluna 7: permite definir os caracteres (0-9 ou a-z, “case-insensitive”) que irão identificar os subcampos, se houver. Lembre-se de que, se subcampos forem informados aqui, as linhas subsequentes DEVEM definir cada subcampo individualmente, caso contrário, um erro lógico será dado. Na linha da tabela que define o subcampo específico, esta coluna deve conter o identificador de subcampo. Coluna 8: permite, opcionalmente, definir caracteres como pontuação (,:: etc.) que serão convertidos na mesma sequência – assim tenha cuidado e verifique se há coerência! – para identificadores de subcampos. Isto permite ao pessoal de entrada de dados usar a pontuação, em vez de os menos óbvios identificadores de subcampo, mas lembre-se que ABCD, também permite lidar com cada subcampo individualmente, sem ter que se preocupar com os identificadores (veja a seção sobre “Entrada dados”). Coluna 9: permite definir o tipo de componente HTML de entrada, que será oferecido na planilha de entrada de dados, onde há 15 possibilidades: . | Texto/Área de texto irá apresentar uma caixa de texto de tamanho variável. O número indicado na coluna “Linhas” define o número de linhas que serão apresentadas nesta caixa. | Texto (tamanho fixo) irá apresentar uma caixa de texto de tamanho fixo. O número indicado na coluna “Colunas” define o número de caracteres permitidos nesta caixa. | Tabela irá apresentar uma tabela na qual, nas linhas, as ocorrências do campo podem ser entradas, e nas colunas, os subcampos das ocorrências podem ser inseridos. Os números nas respectivas “linhas” e “colunas” definem, como pode ser esperado, o número de ocorrências e subcampos que serão capturados para este campo. | Senha apresenta uma caixa de texto a qual será preenchida com * (asterisco) para cada caractere digitado, para ocultar o conteúdo deste campo especial. Se a opção MD5 é ativada no arquivo config.php, as senhas serão criptografadas. | Data é a opção para capturar uma data, com a assistência de um controle de JavaScript para a seleção da data de um calendário. | Data-ISO é o campo de data no formato ISO (aaaammdd), em geral preenchido automaticamente pelo ABCD para uso interno. | Seleção simples permitirá a seleção de apenas um elemento de uma lista de opções pré-definidas. | Seleção múltipla permitirá a seleção de mais de um elemento de uma lista de opções pré-definidas. | Checkbox é a opção para permitir que um ou mais caixinhas sejam assinaladas (ativadas), a fim de selecioná-los. | Rádio é a opção para permitir que apenas um botão redondo seja ativado, a fim de selecionar a opção relacionada. | Área HTML é a opção de apresentar ao usuário um editor de HTML completo (controle de JavaScript, no ABCD é usado o FCKEditor) para a edição, em modo WYSIWYG (What You See Is What You Get), texto com códigos HTML. | HTML externo é a opção para criar, como em 10, um texto-com-códigos-HTML, mas não será armazenado na base de dados, e sim como um arquivo externo, com um link para este arquivo no registro ISIS. | Carregar arquivo é a opção de apresentar um controle de JavaScript para carregar arquivos para o servidor e criar um link de acordo. | Apenas leitura é um campo que não será editado depois de ter sido preenchido, visto que é somente leitura. | Oculto é um campo que não será mostrado depois de ter sido preenchido. | . Coluna 10: permite definir o número de “linhas” que o componente HTML de entrada de dados irá oferecer. Dependendo do tipo de entrada selecionado na coluna anterior, isso significa o número de linhas de texto que podem ser exibidas na caixa ou o número de ocorrências de um campo (em uma tabela para conter um “grupo”) que serão permitidas, etc. Coluna 11: Tal como acontece com a coluna anterior, esta coluna permite definir um número, mas desta vez para o número de “colunas” no componente HTML de entrada, que pode ser, por exemplo, o número de caracteres (em um texto de tamanho fixo) ou o número de subcampos (em uma tabela), ou mais genericamente, a “largura” da caixa. Em princípio, depois de ter definido estas onze colunas e se não houver necessidade de definir “picklist”, o que resta é simplesmente definir, se quiser, um valor “default” para este campo na penúltima coluna, e indicar se uma página de ajuda para o campo atual deve ser disponibilizada. Estas páginas de ajuda devem ser referenciadas como URL’s (arquivos locais ou páginas on-line). No final da tabela são fornecidos opções para salvar a tabela, mas também para testar e validar a mesma. Aqui as opções de “Teste” e “Validação” irão respectivamente. apresentar o formulário resultante para obter uma idéia sobre o resultado e exibir a tabela em uma janela diferente, com uma mensagem indicando se existe qualquer erro de lógica ou gramatical na tabela. Isto acontece sem informar que tais erros precisam ser corrigidos antes de “salvar” ou “atualizar” a FDT com a última opção apresentada aqui. A opção “Listar” fornece uma listagem da tabela em uma janela separada, por exemplo, permitindo imprimi-la ou salvá-la como um arquivo separado. Definição de picklists Continuamos aqui discutindo as colunas da FDT, desta vez as colunas 12-20, que (exceto para as 2 últimas) tratam de definição de “pick-lists” para serem apresentadas na planilha de entrada de dados para apoiar o controle de terminologia, controle de autoridades, ou simplesmente para facilitar a entrada de dados, fornecendo as opções disponíveis. Coluna 13: - Tipo de pick-list: aqui definimos o tipo de lista de controle a ser utilizada, com as seguintes opções: Base de dados, Tabela ou Tesauro. Uma base de dados é na verdade uma base de dados ISIS com seu arquivo invertido, proporcionando assim um número quase ilimitado de possibilidades, no entanto é uma solução complicada. A pick-list simples (tabela) será baseada em um arquivo ASCII (ou TXT) que contém em cada linha uma opção. A opção “Tesauro” é de fato novamente uma base de dados (ISIS), mas desta vez usando uma estrutura específica de campos, com referências aos diferentes (e padronizadas) relações hierárquicas de tesauro, tais como “sinônimo”, “termo genérico”, ”termo específico”, “nota de escopo”, “use” ou “usado para”. Tal base de Tesauro, normalmente fornece maneiras de “navegar” com os termos relacionados e, portanto, oferece até um nível mais elevado de apoio à entrada de dados, fornecendo de forma científica descritores de um determinado campo científico ou tópico. Coluna 14 - Nome: aqui deve ser informado o nome de qualquer base de dados ou o arquivo no qual a lista de controle está baseada. Isto também pode ser obtido pela opção de “Browse” na coluna 15 (ver abaixo). Coluna 15 - Prefixo: aqui o prefixo curto deve ser colocado, no caso da lista ser de uma base de dados, visto que a lista será produzida a partir do arquivo invertido da base de dados e que muitas vezes será dividida em seções, através do uso de um prefixo – este é o prefixo que deve ser colocado aqui para permitir a apresentação parcial do arquivo invertido. Se por exemplo, a lista de controle é utilizada para facilitar a entrada de nomes de editores (já que muitos são usados várias vezes), provavelmente a base de dados “publishers” será indexada com o prefixo “PU=”. Colocando, então, este prefixo na coluna 16, vai mostrar apenas a seção do IF (Arquivo Invertido) com este prefixo. Coluna 16 – Browse: é um link que, quando clicado, abrirá a seguinte janela separada, o que permite a definição de algumas informações na base de dados da lista em caixas separadas, principalmente o nome da base de dados que pode ser selecionada a partir das já disponíveis. Coluna 17 - Formato de exibição (ou “listar como”): designa a PFT que define, com a Linguagem de Formatação, como os valores da lista serão exibidos. Aqui pode ser informada uma “PFT” interna, por exemplo, “v11”, ou pode ser uma referência a um formato externo, como “@myformat.pft”. Este formato externo tem que estar escrito, seguindo um padrão predefinido, a fim de ser corretamente interpretado. Veja o exemplo aqui utilizado para os arquivos de autoridades da base de dados MARC: @autoridades.pft: . select e3 case 1: v1 case 100: v100^a,`$$$`v100^a case 110: v110^a,`$$$`v110 case 111: v111^a,`$$$`v111 case 245: v245^a,`$$$`f(mfn,1,0) case 260: v260^a,\" : \"v260^b case 270: v270 case 340: v340 ... Endsel . Nota No caso de a PFT conter pipes (|), estes NÃO PODEM ser usados na FDT interna, mas tem que ser colocados em uma PFT externa, referenciada a partir desta célula (isto é porque estes símbolos são também usados como separadores para os valores das colunas da FDT, gravada em formato ASCII). Coluna 18: Extrair como: define, novamente com a Linguagem de Formatação, como exatamente o conteúdo do campo precisa ser extraído a partir dos valores do campo do registro para o qual aponta a entrada na lista (como um “posting” de arquivo invertido). Se este valor for omitido, os valores serão mantidos no formato definido como “formato de exibição” na coluna anterior. Se o formato de exibição é um formato pré-definido (@xxxx) e segue as instruções para separar o formato de visualização do formato de extração por $$$, essa parte deve ser deixada em branco. Coluna 19: Valor padrão: aqui pode ser informado um valor padrão, que pode servir para campos que muitas vezes têm, no caso específico da bases de dados, o mesmo valor, o qual então será apresentado automaticamente. Coluna 20: Ajuda: é uma caixa de seleção (ativada ou não) que indica se um arquivo de ajuda para este campo deverá ser apresentado na planilha. As páginas de ajuda são armazenadas na pasta bases/dbn/ayudas, onde dbn representa o nome da base de dados. ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#criando-uma-nova-base-de-dados-a-partir-do-zero",
    "relUrl": "/docs/criando-uma-base/#criando-uma-nova-base-de-dados-a-partir-do-zero"
  },"4": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Definição da FST",
    "content": "Depois de ter definido a lista de campos (e picklists para os mesmos), ISIS espera que o administrador, que está criando uma nova base de dados, vá definir não apenas quais campos serão indexados, mas também exatamente como eles devem ser indexados. Isto é o que a Tabela de Seleção de Campos (FST) se destina a fazer. Há excelentes documentos disponíveis como “páginas de ajuda” no ABCD sobre esta complicada técnica ISIS (e incluída como anexo a este manual), então aqui só apresentaremos a finalidade principal das três colunas FST. A FST contém três colunas: . O identificador Esta é uma tag (um número) que será utilizada como campo de onde o termo de índice foi obtido, por exemplo, para permitir restrições em nível de campo em pesquisa. Em geral, esta tag irá corresponder ao campo real de onde o valor foi tomado, mas pode ser também um “campo virtual” (por exemplo, o grupo de vários títulos em um “campo de título” para simplificar a estrutura para a pesquisa). Por exemplo, pode-se criar a pesquisa muito popular “TODOS OS CAMPOS” (usuários Google não conhecem nada além disto!) pela indexação de todos os campos significativos com um e mesmo IDentificador, por exemplo, “999” para permitir uma pesquisa “não-desdobrada”. A técnica de indexação ISIS avalia nove técnicas para indexação, mas basicamente podem ser reduzidas a duas opções principais: o campo no todo (abreviado para os primeiros 60 caracteres no ABCD) - chamada de “por linha” – ou uma indexação de texto completo - chamada “por palavra”. As técnicas de indexação de 5-9 são otimizadas para indexação usando um “prefixo” (uma pequena tag precedendo os termos para agrupá-los na mesma seção do índice geral ou arquivo invertido em ordem alfabética). O formato de extração Aqui é especificado o formato para produzir a string a ser indexada, usando a Linguagem de Formatação ISIS. Todos os recursos da Linguagem de Formatação (exceto funções de apresentação) podem ser utilizados, incluindo REFerências a outras bases de dados. A interface do ABCD torna a criação de tal FST tão fácil quanto possível (mas na realidade não é fácil, por causa das possibilidades avançadas disponíveis!), não apenas por fornecer a FST em 3 colunas editáveis, mas também, com uma referência à FDT, a partir da qual os campos podem ser usados com suas tags, e também para indicar se têm subcampos e se são repetitivos ou não. Como pode ser observado neste exemplo, que usa formatos de extração muito simples, preferimos sempre prefixos, por exemplo, ‘ID_’ tendo em vista algumas opções embutidas da interface OPAC iAH para o ABCD, recomendamos a utilização de prefixos de 3 caracteres terminando com um sublinha (‘_’). Como a Linguagem de Formatação (o recurso mais poderosa do ISIS) pode ser usada aqui na sua capacidade total (sem os recursos de apresentação gráfica), os valores podem ser processados antes de entrarem no dicionário, por exemplo, ‘N:’, f (mfn, 1,0) produz o número do registro ou MFN, formatado (f) como uma string, mas exemplos mais complicados podem ser dados, por exemplo: . | uma combinação de vários campos ou subcampos acrescidos de pontuação. | formatos usando a função REF para se referir a bases de dados externos para obter valores dos mesmos depois de localizar o MFN com a função L – assim, por exemplo, códigos podem ser convertidos em valores para o dicionário. Depois de ter editado a FST, ela pode ser testada, com qualquer registro da base de dados, para verificar se os valores reais que serão indexados de fato atendem o que se pretende. | . ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#defini%C3%A7%C3%A3o-da-fst",
    "relUrl": "/docs/criando-uma-base/#definição-da-fst"
  },"5": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Editor de planilha de entrada de dados",
    "content": "Como em qualquer aplicação ISIS, o ABCD permite a criação de muitas planilhas diferentes para diferentes objetivos, como por exemplo, para lidar apenas com um subconjunto menor de campos, ou com os campos em uma sequência diferente, etc. Por essa razão ABCD oferece nesta opção uma ferramenta fácil de selecionar quais campos devem ser apresentados na (nova ou editada) planilha e em que sequência devem ser apresentados: . No caso de uma planilha existente precisar ser editada, ela pode ser selecionada (na parte superior da interface) a partir de uma lista - onde, possivelmente, também uma planilha existente pode ser excluída, se assim o desejar. A parte principal da planilha apresenta a lista de campos disponíveis, com a possibilidade de copiar qualquer campo () ou todos os campos () para a lista de campos da planilha no lado direito. Finalmente, a planilha pode ser salva no sistema com um nome interno (curto e somente minúsculas) e uma descrição para fácil identificação. ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#editor-de-planilha-de-entrada-de-dados",
    "relUrl": "/docs/criando-uma-base/#editor-de-planilha-de-entrada-de-dados"
  },"6": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Editor de PFT",
    "content": "Considerando que a Linguagem de Formatação ISIS é uma ferramenta muito poderosa, com muitas possibilidades, um documento específico é acrescentado sobre o “(C)ISIS - Linguagem de Formatação” como anexo a este manual sobre ABCD, mas também pode ser consultado em um link fornecido nesta interface PFT do ABCD. Aqui apenas explicamos brevemente como a interface ABCD permite a criação fácil de qualquer formato HTML (para apresentação em páginas Web) ou formatos “delimitados” (para exportação para um arquivo com campos delimitados por vírgula). O Editor de PFT possui quatro partes: . Parte 1: Uso de um formato existente: uma lista de PFT’s existentes será disponibilizada para selecionar. Também pode ser excluído ou carregado (upload) a partir de um arquivo externo, se ainda não estiver disponível. O formato, então, será apresentado com um editor para fazer modificações no mesmo. Parte 2: criar um formato: tal como com outros editores de tabela no ABCD, primeiro é apresentada uma lista de campos disponíveis, que podem ser copiados individualmente ou todos juntos para o formato e depois re-ordenados. Nota Truques de seleção do Windows podem ser usados aqui: Ctrl-clique para adicionar uma entrada à sua seleção ou Shift-clique para selecionar todas as opções até a posição do cursor. Parte 3: gerar saída: como mencionado e mostrado acima, gerando saída para testar a FTP pode ser um dos três pré-definidas formas padrões de apresentação dos dados de sua base: página Web “formatado como tabela” (em colunas), página Web “formatada por parágrafo” (sem colunas), ou - alternativamente, para fins bem diferentes - um formato delimitado para exportação para outros softwares. ABCD irá gerar imediatamente o código necessário, combinando tags HTML como ‘literais’ entre aspas com os valores dos campos (Vx). No caso de ser selecionado um formato baseado em “coluna” (se “delimitado” vai permitir a exportação para softwares, como planilhas eletrônicas e ferramentas de análise estatística), no quadrado da direita os (sequência dos) cabeçalhos das colunas podem ser definidos, por default, serão usados os nomes de campos já definidos. Este formato então pode ser “testado” imediatamente com um intervalo de registros ou uma seleção definida por uma expressão de pesquisa. Isso resultará, quando “pré-visualizado” na interface, ao contrário de “enviada para um documento ou planilha eletrônica” (esta última opção é ideal quando os dados de saída são “delimitados”), em um formato de exibição semelhante ao seguinte: . Nota Neste exemplo, os códigos de subcampos ainda são visíveis, mas simplesmente acrescentando um comando de “modo” como “mhl” ao formato, ISIS irá ocultá-los. As outras funções de definição/edição de definições de bases dados do ABCD serão discutidas abaixo, quando se tratar da seção “Atualizar definição de bases de dados”. ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#editor-de-pft",
    "relUrl": "/docs/criando-uma-base/#editor-de-pft"
  },"7": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Copiando uma base WinISIS existente",
    "content": "Aqui estão os passos a serem seguidos para criar uma base de dados ABCD a partir de sua base de dados WinISIS existente: Passo 1: exporte seus registros existentes para arquivo ISO, usando WinISIS (ou outra ferramenta ISIS que permita exportar no formato ISO); lembrar onde você salvou este arquivo ISO exportado, normalmente estará na pasta WORK de sua instalação WinISIS. Não precisam ser definidos parâmetros específicos, a não ser, é claro, que você queira usar apenas um subconjunto dos registros da base de dados (usando intervalo de MFN, ou um resultado de pesquisa) ou se você necessita “converter” (reformatar) os registros através do uso de uma “FST de reformatação”, antes de importá-los no ABCD. Passo 2: atribuir no ABCD, depois de ter selecionado a opção “Importar de WinISIS”, um nome e uma descrição – como acontece com uma nova base de dados, ver acima. Em seguida, selecione sua base de dados WinISIS, usando a lista da parte do diálogo “Criar a partir de”. Passo 3: selecione a FDT pertencente a esta base de dados e clique em “Carregar” para ter a FDT carregada para o ambiente ABCD da nova base de dados. Passo 4: selecione a FST pertencente a esta base de dados e clique em “Carregar” para ter a FST carregado para o ambiente ABCD da nova base de dados. Passo 5: selecione a PFT pertencente a esta base de dados e clique em “Carregar” para ter a PFT carregado para o ambiente ABCD da nova base de dados. Advertência A maioria das bases WinISIS usa uma PFT default (com o nome da base de dados) que contém códigos típicos de Windows (ao contrário de HTML), como por exemplo, “BOX”, “FS”, etc. Estes códigos irão resultar em um “erro gramatical” quando for abrir no ABCD, por isso é melhor evitar isso selecionando uma PFT sem tais elementos típicos do Windows! Se não estiver disponível, lembre-se de recriar um formato baseada em HTML no ABCD para substituir a PFT default da nova base de dados. Passo 6: clique na opção “Criar base de dados”, para que o ABCD comece a gravar as pastas e arquivos necessários para sua nova base de dados. Uma mensagem que a criação foi bem sucedida (ou não, em caso de problemas) será exibida na tela. Também será lembrado do fato de que, sem a atribuição desta base de dados como acessível para pelo menos a um usuário, você não será capaz de utilizar esta base de dados. Passo 7: agora você pode abrir a nova base de dados, visto que se tornou parte da lista na janela principal de administração de bases de dados. Passo 8: como a base de dados pode ser aberta, mas com 0 registros, a primeira coisa a fazer é importar os registros ISO criados no primeiro passo desta sequência. Para este fim, clique no ícone “Utilitários” da barra de ferramentas principal da tela de entrada de dados (conforme descrito na seção dedicada a isto) e selecione a opção “Importação ISO”. Este procedimento, como pode ser esperado, envolve a seleção do arquivo ISO fonte, que então deve ser “carregado” . Passo 9: agora, um pouco estranho, o arquivo ISO está pronto para ser efetivamente importado para a base de dados. Para isso, clique novamente no ícone “Utilitários” da barra de ferramentas e selecione “Importar ISO”, onde agora o arquivo ISO que foi “carregado” está efetivamente disponível para importação (converção) para sua base de dados ABCD. O software irá perguntar se está OK, para realmente começar a importar os registros ISO do arquivo selecionado. A lista de registros importados será mostrada na tela para monitorar seu progresso e sucesso. Passo 10: se os seus recém importados registros não são exibidos imediatamente na base de dados, reabrir a base de dados a partir do menu principal irá atualizar os parâmetros da base. Passo 11: agora os registros devem estar visíveis e editáveis como registros normais, só que ainda não foram indexados no arquivo invertido. Então use a opção de “Geração do arquivo invertido” da seção “Utilitários” da tela de “Utilitários”. Advertência Se a sua série de registros importados é muito grande (por exemplo, acima de algumas centenas), é possível, dependendo do sistema com que você está trabalhando, que o processo será muito demorado para o servidor Web (Apache, na maioria dos casos) e não será permitido terminar o mesmo. Por esta razão, será necessário, em tais casos, não executar a ação de geração do arquivo invertido do ABCD (como um ambiente Web), mas diretamente a partir da linha de comando, usando ferramentas CISIS (para os quais uma outra seção do presente manual dará os detalhes). ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#copiando-uma-base-winisis-existente",
    "relUrl": "/docs/criando-uma-base/#copiando-uma-base-winisis-existente"
  },"8": {
    "doc": "Criando uma nova base de dados no ABCD",
    "title": "Copiando uma base de dados ABCD existente",
    "content": "Esta última opção é a mais fácil de realizar, já que apenas um novo nome e uma descrição precisam ser inseridos, após o que ABCD irá simplesmente reproduzir todos os arquivos necessários de uma nova estrutura de pastas para a nova base de dados. As bases de dados fonte, das quais você pode escolher, são as que constam do menu bases de dados, em outras palavras: as descrições de bases de dados que constam do arquivo “bases.dat”, na pasta bases do ABCD. O sistema irá simplesmente - como acima - listar todos os arquivos copiados e criados em sua própria estrutura de pastas e é isto! Uma base de dados vazia, como uma cópia de base de dados ABCD existente, mas com novo nome e nova descrição, estará disponível para uso normal. ",
    "url": "https//abcdbrasil.github.io/docs/criando-uma-base/#copiando-uma-base-de-dados-abcd-existente",
    "relUrl": "/docs/criando-uma-base/#copiando-uma-base-de-dados-abcd-existente"
  },"9": {
    "doc": "Home",
    "title": "O ABC do ABCD",
    "content": "Este documento tem como objetivo fornecer todas as informações e instruções relevantes sobre como usar o biblioteca e sistema de gerenciamento de documentação ‘ABCD’. Tanto as operações básicas como a gestão avançada do software são discutidos, assim como os tópicos úteis e necessários relativos ao software ISIS sobre os quais o ABCD é baseado. Nesta nova edição são acrescentadas as novas características da versão 2.0: o uso de diferentes sabores de CISIS, de Unicode e as capacidades da biblioteca digital, assim como alguns módulos adicionais (ODDS, LDAP, DSpaceBridge) e utilitários (conversão UTF8, criação de objetos de empréstimo…) . Começando no ABCD Ver no GitHub . ",
    "url": "https//abcdbrasil.github.io/#o-abc-do-abcd",
    "relUrl": "/#o-abc-do-abcd"
  },"10": {
    "doc": "Home",
    "title": "Para começar no ABCD",
    "content": ". | O ABCD é um software livre, de código aberto escrito que pode ser utilizado em Bibliotecas e Centros de Documentação. | O ABCD é escrito em diversas linguagens de programação, sendo o PHP a linguagem predominante. | As bases de dados do ABCD são ISIS, ou seja, são bases de dados textuais que necessitam do interpretador www-isis. | Esta documentação foi pensada para os 3 tipos de usuários ABCD: . | Operadores do sistema | Desenvolvedores de bancos de dados | Programadores | . | . Instalação . ABCD é uma combinação de várias tecnologias de software : Bases de dados ISIS, ISIS Scripts e Formatos CISIS, um webserver, PHP, mais (no caso do módulo avançado de Empréstimos) JAVA e MySQL em algumas partes. É baseado na web, o que significa que necessita de um servidor web tem que ser instalado com medidas especiais de acesso e segurança : principalmente quando intalado na Internet. O ABCD pode ser instalado em situações bem diferentes, variando de um simples sistema local até servidores em grandes redes com um webserver e muitas vezes também já com serviços de PHP pré-instalados. Para instalar o ABCD é necessário instalar previamente: . Apache . | Linux | Windows | . PHP . | Extensões essenciais do PHP: . | php-curl | php-gd | php-gmp | php-mcrypt | php-mbstring | php-tidy | php-xsl | yaz (para intercâmbio de dados bibliográficos com Protocolo Z39.50) | . | . Contribuição . Você pode contribuir com este repositório fazendo uma pergunta ou submetendo uma sugestão de conteúdo no repositório do Github. ",
    "url": "https//abcdbrasil.github.io/#para-come%C3%A7ar-no-abcd",
    "relUrl": "/#para-começar-no-abcd"
  },"11": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "https//abcdbrasil.github.io/",
    "relUrl": "/"
  },"12": {
    "doc": "Instalação do ABCD",
    "title": "Instalação do ABCD",
    "content": "Versões de instalação disponíveis. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/",
    "relUrl": "/docs/instalacao-do-abcd/"
  },"13": {
    "doc": "Instalação do ABCD",
    "title": "Tabela de conteúdo",
    "content": ". | ABCD versão 1.0 vem em três versões principais: . | 1 Pacote de instalação não assistida para Windows: | 2 Instalação assistida para o Windows: | 3 Pacote de instalação não assistida para Linux: | . | Questões de instalação . | 1 Um pacote completo, contendo todos os arquivos do próprio ABCD mais o servidor Apache e motor PHP-scripting. | 2 Um pacote de somente ABCD, que requer que o Apache (ou outro servidor web) e PHP já estejam instalados. | . | Estrutura de diretórios e direitos de acesso . | Apache | PHP | WWW | Bases | cgi-bin | htdocs | . | empweb | iAH | isisws | secs-web | site | EmpWeb (somente se a instalação dele foi acrescentada!) | Temp | . ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#tabela-de-conte%C3%BAdo",
    "relUrl": "/docs/instalacao-do-abcd/#tabela-de-conteúdo"
  },"14": {
    "doc": "Instalação do ABCD",
    "title": "ABCD versão 1.0 vem em três versões principais:",
    "content": "1 Pacote de instalação não assistida para Windows: . Este é um arquivo ZIP contendo todos os arquivos necessários, que simplesmente precisa ser descompactado para a raiz do (um de seus) disco(s) rígido(s), por exemplo, C:. Visto que engloba tanto o Apache como o PHP, depois de ter simplesmente descompactado, deve funcionar normalmente! Aqui Apache vem com seu próprio arquivo de configuração (httpd.conf), onde a porta 9090 está ativada para permitir que rode junto com outras possíveis instalações Apache em execução. Apenas para alguns usos específicos, como, por exemplo, o uso do Z39.50 que necessita de módulos PHP adicionais (YAZ), será necessário fazer algumas edições (por exemplo, php.ini). Instalações do ABCD que irão utilizar o módulo Avançado Empréstimo (EmpWeb) precisam descompactar adicionalmente o mais recente pacote zip EmpWeb, onde uma subpasta principal extra será criada em \\ABCD e alguns arquivos adicionais serão acrescentados ao diretório Central do ABCD. 2 Instalação assistida para o Windows: . Este é um executável de auto-instalação, que irá verificar primeiro se o Apache e PHP já estão instalados no sistema. Se assim for, estas instalações serão ignoradas, se não elas serão adicionados à instalação ABCD básica. Isto requer, principalmente, seguir os diálogos e as instruções do próprio instalador. No final, o resultado será uma pasta de diretório semelhante ao pacote em 1. 3 Pacote de instalação não assistida para Linux: . Este é um arquivo .tar.gz. para sistemas Linux, que deve ser descompactado paro o “file-system” do Linux, dependendo de sua organização (definição como onde tais aplicações podem ser colocadas). Se os corretos direitos de acesso são concedidos (com os comandos apropriados do Linux como chown e chmod) ABCD pode ser instalado, como no Windows, sob o file-system root ‘/’. Em sistemas Linux, pressupõe-se que o Apache e o PHP sejam instalados separadamente (por exemplo, com a ferramenta dedicada como o apt-get ou Synaptic), assim o pacote contém apenas os arquivos ABCD próprios do diretório “www’”. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#abcd-vers%C3%A3o-10-vem-em-tr%C3%AAs-vers%C3%B5es-principais",
    "relUrl": "/docs/instalacao-do-abcd/#abcd-versão-10-vem-em-três-versões-principais"
  },"15": {
    "doc": "Instalação do ABCD",
    "title": "Questões de instalação",
    "content": "Esta seção trata das questões de instalação do ABCD. Visto que o ABCD tem vários componentes totalmente diferentes, a instalação, por definição, envolve algumas armadilhas potenciais. Três motivos principais podem ser dados para que a instalação seja complexa: . | ABCD é uma combinação de várias tecnologias de software: bases de dados ISIS, ISIS-scripts e formatos ISIS, um servidor web, PHP-scripting, mais (no caso do módulo avançado de empréstimos), algumas partes em JAVA e MySQL; | sendo baseado na web, o que significa um servidor web tem de ser instalado e medidas especiais devem ser tomadas sobre os direitos de acesso: em princípio, todo o mundo - com acesso ao WWW - pode interferir; | ABCD será instalado em situações muito diferentes, variando desde um PC simples “stand-alone” (mesmo sem rede) até servidores nas grandes redes com um servidor web e muitas vezes também com serviços PHP-scripting já pré-instalados. Atualmente, a instalação é fornecida em dois tipos: | . 1 Um pacote completo, contendo todos os arquivos do próprio ABCD mais o servidor Apache e motor PHP-scripting. Nesta situação um arquivo (.Zip) deve ser descompactado em uma pasta-raiz do sistema de arquivos (que pode ser qualquer sistema operacional no qual o Apache/PHP e ISIS podem ser executados). Após a descompactação, haverá uma pasta específica para o Apache, uma outra para o PHP, uma pasta cgi (para conter os executáveis para acesso web) e uma pasta ‘documentos’ (no Apache chamado ‘htdocs’), que funciona como a página inicial (homepage) da aplicação ABCD. O Apache vem com uma configuração pré-definida (arquivo httpd.conf na subpasta conf da pasta do Apache), que define os seguintes parâmetros específicos: . | Parâmetros do Apache | Descrição | . | ServerRoot”/ABCD/apache” | Diretório a partir do qual o Apache é executado | . | Listen 9090 | A porta usada pelo ABCD, sendo a porta http por default 80, mas para evitar interferência com outras aplicações http existentes, se assim o desejar, uma porta diferente pode ser usada, por exemplo, 9090. No caso de utilizar um número de porta diferente, algumas adaptações terão que ser feitas no script ABCD_start.bat e, em algumas URLs do OPAC. | . | PHPIniDir “/ABCD/php” | A pasta a partir da qual PHP é executado | . | DocumentRoot “/ABCD/www/htdocs” | A pasta-raiz de todos os arquivos que fazem parte da própria aplicação, ou seja a ‘homepage’ | . | ScriptAlias /cgi-bin/ “/ABCD/www/cgi-bin/” | A pasta na qual o Apache irá permitir a execução dos executáveis a partir de instruções nas páginas web | . PHP vem com uma configuração predefinida em php.ini. Configurações PHP e php.ini Visto que ABCD usa PHP com alguns módulos PHP adicionais (Yaz, Processador XSLT…) “Pears” devem ser instalados dentro da instalação PHP e alguns módulos extras precisam ser copiados para a pasta de ‘extensões’ PHP: php_yaz.dll, yaz.dll, yaz3.dll (estes dois servem às funções Z39.50 de catalogação ABCD), iconv.dll, libxm2l.dll, libxslt.dll (para o processador XSLT). A pasta de extensões PHP precisa estar presente no caminho (path) da variável de ambiente do sistema (no Windows, por exemplo: clique em ‘Meu Computador’ (botão direito do mouse) | Propriedades | Avançado | Variáveis de Ambiente | Variáveis do Sistema e modificar a variável Path, acrescentando, se não existir : ‘;C:\\ABCD\\php\\ext’). Verifique também se seu php.ini (em \\ABCD\\php) tem as extensões mencionadas aqui que estejam comentadas (ou seja, remover o ‘;’ precedente para ativar a extensão). | extension=iconv.dll | extension=libxml2.dll | extension=libxslt.dll | extension=yaz3.dll | extension=php_yaz.dll | . Seja cuidadoso com os outros eventuais arquivos php.ini existentes, por exemplo, em \\Windows ou \\PHP, uma vez que estes podem perturbar o seu ABCD-PHP. Uma opção de teste do PHP com ABCD está disponível na URL: http://localthos:9090/info.php. Estamos especialmente interessados na seção seguinte, onde XSL e Yaz devem estar no estado de executando. Se não, verificar sua variável ambiente Path e todos os caminhos mais uma vez, assim como as ‘extensões’ do seu php.ini! . O arquivo php.ini contém mais algumas configurações que devem ser verificadas para que o ABCD rode corretamente: . | register_globals = On (default = Off); | extension_dir = “/ABCD/php/ext” (ou ajustar o caminho real de sua instalação ABCD); | default_charset = “iso-8859-1” (default = inativo); | extension_dir = “/ABCD/php/ext” =&gt; define o diretório de extensões; | extension=yaz3.dll e extension=php_yaz.dll listados no =&gt; são adicionados na secção “Dynamic Extensions”, a fim de permitir que o módulo Yaz-Z39.50 funcione. | . 2 Um pacote de somente ABCD, que requer que o Apache (ou outro servidor web) e PHP já estejam instalados. Neste caso, supõe-se que pelo menos algum “expert” esteja disponível que entenda a instalação do servidor web e a configuração do PHP existentes. Usando ‘aliases’ para a instalação do ABCD e da pasta cgi, que podem ser colocados em um arquivo de configuração “virtual host”, o ABCD pode ser instalado em qualquer lugar dentro ou fora da pasta Home do servidor web. Portanto, apenas as pastas cgi e htdocs são incluídas neste pacote. Gerentes de Sistema devem recorrer aos manuais do Apache e PHP, no caso de não terem certeza sobre como proceder com este tipo de instalação. Alternativamente pode-se também usar um pacote de instalação como EasyPHP ou WAMP (para Windows) / XAMP (para UNIX/Linux). Novamente, neste caso, o Apache e o PHP (e MySQL) serão automaticamente instalados e as pastas cgi-bin e htdocs do ABCD precisam ser movidos para a estrutura de pastas existentes (do Apache) e php.ini precisa ser editado. Uma ferramenta dedicada à instalação, como parte do software ABCD, será criada, mas na essência continuará fazendo o mesmo conforme descrito acima, apenas a coleta de alguns parâmetros para a instalação (como qual disco que será utilizado, qual porta, etc.). ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#quest%C3%B5es-de-instala%C3%A7%C3%A3o",
    "relUrl": "/docs/instalacao-do-abcd/#questões-de-instalação"
  },"16": {
    "doc": "Instalação do ABCD",
    "title": "Estrutura de diretórios e direitos de acesso",
    "content": "Durante a instalação do ABCD a seguinte estrutura de pastas será criada: . Como pode ser observado, três sub-pastas foram criadas na pasta principal \\ABCD. No caso da instalação do módulo opcional de Empréstimos Avançados, mais uma pasta contendo a tecnológica base do ABCD será acrescentada: o “Java Development Kit” (JDK). As pastas padrão são respectivamente: . Apache . A pasta Apache contém o software do servidor web Apache, que é na realidade apenas um de vários softwares importantes desenvolvidos pela “Apache Software Foundation”. Por default, o servidor Apache é instalado em outra pasta-base (por exemplo, no Windows: C:\\Arquivos de Programas\\Apache Software Foundation\\Apache2.2) e o suporte de rede, provavelmente, terá instalado o Apache no servidor de acordo com as suas próprias preferências, mas, quando instalado a partir do “pacote ABCD completo” o Apache será executado - com seu arquivo de configurações httpd.conf adaptado para esta situação - a partir de \\ABCD\\Apache. PHP . A pasta PHP contém os scripts do software PHP. Novamente, como no Apache, em muitos casos, este software será instalado no seu próprio diretório, por exemplo, em C:\\PHP, ou muitas vezes também como parte de um pacote em conjunto com Apache, MYSQL e PHP, por exemplo, com EasyPHP ou servidor WAMP. Quando instalado como parte do ABCD, porém, PHP será executado daqui com as necessárias adaptações feitas no php.ini, arquivo principal de configuração do PHP. WWW . A pasta WWW contém todo o sistema ABCD, que é subdividida em 4 pastas : . Bases . A pasta bases contém as bases de dados de sua instalação ABCD, que tem uma subpasta dedicada (com muitas subpastas por sua vez) para cada base de dados. Quando uma base de dados adicional é copiada ou criada usando ABCD, o sistema irá criar uma subpasta dedicada extra aqui. Uma lista típica de pastas de bases de dados na pasta /bases tem o seguinte aspecto: . Como pode ser observado, existem muitas bases de dados (mas não tantas quantas tabelas existem em uma configuração relacional, visto que ISIS não pratica a ‘normalização’ em tabelas relacionais), algumas delas - por exemplo, Marc, biblo, dblil - são modelos que vem com a instalação do ABCD, outras - neste caso, por exemplo, gemim - são criadas pelo ABCD nesta instalação, enquanto outras, finalmente, servem para módulos específicos do sistema de bibliotecas, por exemplo, ‘providers’ e ‘purchaseorder’. Recomendamos que ‘reserva’, ‘suggestions’, ‘suspml’ sejam utilizadas para o módulo de aquisição, ‘ trans’ e ‘users’ serão utilizadas para o Módulo de Empréstimos. Uma base de dados especial é a “access”, que mantém os usuários (com os seus dados de login) e os seus direitos de acesso (nível de autorização) para as bases de dados. Um arquivo .par, na verdade, é um pequeno arquivo de texto (assim, o mesmo pode ser editado por qualquer editor TXT como Notepad), cada linha com o caminho completo referente às partes da base de dados em questão. Por exemplo, um arquivo .par típico do ABCD é parecido com este: . marc.*=%path_database%marc/data/marc.* prologoact.pft=%path_database%www/prologoact.pft prologo.pft=%path_database%www/prologo.pft epilogoact.pft=%path_database%www/epilogoact.pft epilogo.pft=%path_database%www/epilogo.pft autoridades.pft=%path_database%marc/pfts/en/autoridades.pft . Cada elemento recebe, após o sinal de igual, o seu caminho no sistema de arquivos. Como pode ser observado, variáveis tomadas a partir do Ambiente do Sistema Operacional podem ser utilizadas, neste caso %path_database%, que é substituído pelo verdadeiro caminho, tal como definido na configuração principal do arquivo config.php (ver abaixo). Embora normalmente todos os elementos referidos aqui pertençam à base de dados em questão, os elementos de outras bases de dados também devem ser acrescentados, se forem utilizados em declarações ‘REF’ dos formatos utilizados nesta base de dados, visto que ISIS precisará saber onde localizar tais elementos de dados externos, se chamados a partir de um formato - e vai procurar o seu caminho aqui! . cgi-bin . A pasta cgi-bin contém os arquivos executáveis que o ABCD irá chamar a partir de sua página Web e que, portanto, deve ter autorização de execução pelo servidor web (Apache), utilizando protocolo CGI. No caso do ABCD, o executável principal é o servidor ISIS wxis.exe, que realiza a principal parte do trabalho. Porém algumas outras ferramentas CISIS, para tarefas específicas, também estão incluídas. As subpastas do módulo Wxis aqui contém scripts (com extensão .Xis ) para o servidor Wxis, enquanto a pasta “gizmo” contém algumas bases de dados ISIS pequenas que definem cadeias de caracteres (“strigns”) para serem substituídas por uma outra, por exemplo, para as mudanças devido a diferentes ambientes utilizados (DOS/ASCII, Windows/ANSI, WWW/XML). htdocs . A pasta htdocs (usamos o nome da pasta tradicional do Apache ‘hypertext documents’) é a pasta “Home” do Web site servido pelo servidor Apache do ABCD. Por este motivo, então, contém todos os elementos do software especificamente produzidos para o ABCD (exceto a tecnologia básica externa como o Apache e o PHP): . Dois scripts iniciais estão presentes dentro desta pasta “homepage”: index.php (que é na verdade a “homepage” default, permitindo que a URL do ABCD se refira apenas à parte do servidor) e o script “info.php” é o script PHP clássico de teste que invoca outro script (phpinfo) dando todas as informações sobre a execução da instalação PHP. Visto que o ABCD é uma “suíte” de diferentes funções, cada um tem sua própria página inicial (Homepage), ou seja, o arquivo ‘index.html’ localizado na subpasta apropriada. As principais pastas do sistema ABCD são resumidamente descritas abaixo: . bases Aqui, para cada base de dados (em uma subpasta dedicada), podem ser armazenados arquivos externos com links a partir de registros na base de dados, por exemplo, PDF’s de texto completo ou imagens. As fotos de usuários podem ser armazenados aqui em uma subpasta ‘users’, assim a foto do usuário será exibida sempre que um usuário do sistema de empréstimos é apresentado. central Esta é, na verdade, como sugere o nome, a parte “central” do sistema, onde a maioria das atividades de administração de bases de dados e muitas atividades centrais do software estão incluídas. Vamos, portanto, lidar com subpastas importantes contidas aqui: . Alguns scripts iniciais estão localizados neste nível: homepage.php e inicio.php são páginas que dão a partida, que lêem para a memória os principais parâmetros definidos na configuração config.php (ou config.loans.php para o módulo de empréstimos). Os parâmetros definidos neste arquivo ‘config.php’ crucial são: . | $db_path : o caminho para a pasta onde as bases de dados são armazenados | $Wxis_path : o caminho para o executável, ou seja, o servidor ISIS | $wxis_URL : a URL para o servidor ISIS, que pode ser deixado vazio, a fim de não utilizar as chamadas CGI, mas sim as chamadas de executáveis diretamente a partir do PHP. | $xWxis : caminho para os scripts wxis | $lang : idioma padrão (default) | $lang_db : idioma padrão para o módulo de administração de bases de dados | $institution_name : o nome da instituição responsável | $institution_URL : a URL da instituição responsável | $FCKEditorPath : o caminho para o editor HTML embutido em ABCD | $FCKConfigurationsPath : o caminho para a configuração do editor HTML | $app_path : o caminho para a pasta base de onde todos os módulos centrais são executado (por exemplo /ABCD/www/htdocs/central/) As seguintes pastas lidam com uma função específica ou módulo do ABCD, armazenando os scripts PHP com uma série de elementos adicionais (imagens e folhas de estilo para as páginas web etc.): aquisições, entrada de dados, administração de bases, empréstimos, estatísticas e administração de usuários. Os nomes das pastas, nestes casos, são suficientemente auto-explicativos. Aqui gostaríamos somente de salientar a presença de um módulo “Administração de dados”, que permite a criação de qualquer estrutura ISIS para lidar com qualquer tipo de dados textuais, permitindo ao ABCD ser mais flexível do que a maioria dos outros sistemas e ser mais do que apenas um sistema de bibliotecas. Pastas especiais dedicadas a funções especiais no ABCD são as seguintes : | common : aqui há alguns scripts php cruciais que são necessários em todos os módulos, por exemplo, ‘header’ e ‘footer’ mas também ‘wxis-llamar.php’ (que permite usar tanto o método cgi de chamada de executáveis (mais seguro) ou chamadas de executáveis direto de PHP (mais rápido). O script ‘instituational_info.php’ define o nome da instituição responsável pela instalação do ABCD, que será chamado em muitas páginas. | documentacion : obviamente, esta pasta contém scripts para lidar com a ajuda online para as funções do ABCD. | images : contém pequenas imagens utilizadas em muitas páginas (na sua maioria .png e .gif) | css : contém as “Cascading Style Sheets” (folhas de estilo) utilizadas nesta parte central do ABCD | styles : contém a stylesheet (folha de estilo) principal chamada ‘basic.css’ | lang : contém um script para cada módulo para facilitar a comutação de idioma ou reverter para o idioma default (padrão) | test : contém alguns scripts que testam a instalação do ABCD e acesso ao executável cgi. | . ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#estrutura-de-diret%C3%B3rios-e-direitos-de-acesso",
    "relUrl": "/docs/instalacao-do-abcd/#estrutura-de-diretórios-e-direitos-de-acesso"
  },"17": {
    "doc": "Instalação do ABCD",
    "title": "empweb",
    "content": "Esta pasta não é padrão e contém as subpastas e partes de software utilizadas pelo módulo de Empréstimos Avançados do ABCD, que não será detalhado neste manual. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#empweb",
    "relUrl": "/docs/instalacao-do-abcd/#empweb"
  },"18": {
    "doc": "Instalação do ABCD",
    "title": "iAH",
    "content": "iAH é o nome original da interface Web avançada de “Informações em Saúde” da BIREME que atua como o OPAC do ABCD, mas também como um motor de meta-pesquisa em outras fontes definidas-como-relavantes. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#iah",
    "relUrl": "/docs/instalacao-do-abcd/#iah"
  },"19": {
    "doc": "Instalação do ABCD",
    "title": "isisws",
    "content": "Esta pasta contém scripts para funções relacionadas ao SOAP do ABCD. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#isisws",
    "relUrl": "/docs/instalacao-do-abcd/#isisws"
  },"20": {
    "doc": "Instalação do ABCD",
    "title": "secs-web",
    "content": "Este módulo permite ao ABCD oferecer ferramentas avançadas de gestão de periódicos em ambiente web: Serials Control System. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#secs-web",
    "relUrl": "/docs/instalacao-do-abcd/#secs-web"
  },"21": {
    "doc": "Instalação do ABCD",
    "title": "site",
    "content": "Por último, o módulo ‘site’ combina pesquisa avançada do OPAC (com possibilidades de meta-busca) com um “portal” de serviços, oferecendo a opção de pesquisa dentro de um ambiente de rede com outras fontes de informação e comunicação com usuários. A estrutura e o conteúdo deste portal pode ser editado on-line com um Sistema de Gerenciamento de Conteúdo (Content Management System) interno do ABCD. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#site",
    "relUrl": "/docs/instalacao-do-abcd/#site"
  },"22": {
    "doc": "Instalação do ABCD",
    "title": "EmpWeb (somente se a instalação dele foi acrescentada!)",
    "content": "Esta pasta contém a maioria mas não todos os arquivos necessários para executar EmpWeb, por exemplo, o servidor Java Jetty e os scripts. EmpWeb, porém, também necessita scripts adicionais que são acrescentados ao ABCD Central (isto permite que Empréstimo Avançado seja compatível com o sistema integrado de empréstimos do ABCD) e - uma vez que utiliza uma base de dados SQL para armazenar as operações - uma instalação de um dos SQL comuns de bases de dados (MySQL, Postgres, Oracle …), precisa ser feito em separado - use as instruções de instalação de acordo com a solução SQL escolhida. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#empweb-somente-se-a-instala%C3%A7%C3%A3o-dele-foi-acrescentada",
    "relUrl": "/docs/instalacao-do-abcd/#empweb-somente-se-a-instalação-dele-foi-acrescentada"
  },"23": {
    "doc": "Instalação do ABCD",
    "title": "Temp",
    "content": "Esta pasta contém arquivos temporários geridos internamente. Não há ações relacionadas com gestão ou usuário a serem tomadas com relação a esta pasta. ",
    "url": "https//abcdbrasil.github.io/docs/instalacao-do-abcd/#temp",
    "relUrl": "/docs/instalacao-do-abcd/#temp"
  },"24": {
    "doc": "Introdução",
    "title": "Introdução",
    "content": "Um pouco da história sobre a criação e o desenvolvimento do ABCD. ",
    "url": "https//abcdbrasil.github.io/docs/introducao/",
    "relUrl": "/docs/introducao/"
  },"25": {
    "doc": "Introdução",
    "title": "Table of contents",
    "content": ". | O ABCD Central | O OPAC do ABCD (iAH) | O Site ABCD | O Sistema de Controle de Periódicos do ABCD (SeCS) | O módulo avançado de Empréstimo do ABCD (EmpWeb) | A família do software ISIS (história e visão geral) . | 1975 - A primeira geração | 1985 - A segunda geração | 1995 - A terceira geração | 2005 - A quarta geração | 2008 - A quinta geração | . | De “livre” para “FOSS” . | ISIS como software ‘aberto’ | ISIS como completo software de código aberto | . | Objetivos do ABCD . | ABCD como uma ferramenta bibliográfica genérica e flexível | ABCD como uma ferramenta orientada para bibliotecários | ABCD como uma ferramenta para países em desenvolvimento | . | Atores e parceiros do ABCD | . ABCD é o acrônimo de uma suíte de software para Automação de Bibliotecas e Centros de Documentação. Em espanhol isto significa, na íntegra: Automatisación de Bibliotécas y Centros de Documentación, que mantém o mesmo acrônimo válido também para o idioma francês (Automation des Bibliothèques et Centres de Documentacion) ou português (Automação de Bibliotecas e Centros de Documentação). Mesmo em outros idiomas não-latinos, com pequenas, mas aceitáveis, variações – por exemplo Holandês: Automatisering van Bibliotheken en Centra voor Documentatie – o acrônimo ainda pode ser mantido. O nome em si já expressa a ambição da suíte de software: não apenas prover funções de automação para as bibliotecas “clássicas”, mas também outros provedores de informação, tais como centros de documentação. Flexibilidade e versatilidade estão na vanguarda dos critérios em que o software é desenvolvido. Essa flexibilidade, por exemplo, é ilustrada pelo fato de, em princípio, mas também praticamente qualquer estrutura bibliográfica pode ser gerenciada pelo software, ou mesmo criada por ele próprio. Mesmo estruturas não-bibliográficas podem ser criadas, desde que a informação seja basicamente informação ‘textual’, pois esta é a restrição imposta pela tecnologia de base de dados subjacente, que é a base de dados textual CDS/ISIS. Um bom entendimento de alguns conceitos básicos e técnicas relacionadas com ISIS, por exemplo, a Linguagem de Formatação, é fundamental para o pleno domínio do software ABCD. Por esta razão, algumas seções deste manual também irão lidar com a tecnologia ISIS subjacente. ABCD é chamado de “suíte” de software para automação de bibliotecas e centros de documentação porque é constituído por alguns módulos relativamente independentes, que podem trabalhar juntos de forma plena, mas também pode-se ter alguns sem depender de outros. De fato alguns dos softwares avançados, a maioria já tem demonstrado seu potencial em aplicações da BIREME em ambientes de alta demanda (dentro do contexto da Biblioteca Virtual em Saúde), foram adotados e adaptados no ABCD - é por isso que os nomes originais, como iAH, SeCS (ambos desenvolvidos pela BIREME) e EmpWeb (empréstimo Web, originalmente desenvolvido pela KALIO Ltda. do Uruguai e amplamente testado na Universidade de Valparaiso), são mantidos. Estas partes principais serão mostradas, com as suas relações hierárquicas no segundo nível da imagem a seguir e posteriormente discutidas resumidamente. ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#table-of-contents",
    "relUrl": "/docs/introducao/#table-of-contents"
  },"26": {
    "doc": "Introdução",
    "title": "O ABCD Central",
    "content": "O módulo ‘Central’ do ABCD é composto pelos módulos de Administração de Dados (criação de bases de dados, edição da estruturas de bases de dados, utilitários de bases de dados), Catalogação, Aquisições, Circulação/Empréstimos e Estatística. Um módulo de gerenciamento de thesaurus também está sendo preparado, como parte do módulo de catalogação, para uma estrutura de base de dados de thesaurus específica, com controle de consistência dos níveis hierárquicos. Como parte deste “módulo central” também gostaríamos de mencionar os serviços de importação e exportação, impressão e ferramentas de base de dados, como o bloqueio/desbloqueio e “mudanças globais” de campos em registros. Esta parte “central” de fato representa a parte “back-office” do ABCD, os usuários finais não vão ser confrontados com o mesmo, mas o que eles irão visualizar e é oferecido são totalmente definidos nesta parte central de gestão do software! Qualquer base de dados de estrutura ISIS pode ser definida e gerenciada, atualmente com registros de tamanho máximo de 1Mb e bases de dados de no máximo 4GB (mas estas restrições serão superadas pela próxima geração ISIS e ABCD baseado na NBP). Em comparação com a tecnologia ISIS “normal”, a indexação de chaves de 60 caracteres (em comparação com 30 caracteres) que são usados, há funcionalidades de controle de autoridades muito mais robustas disponíveis (picklists com base em tabelas ou bases de dados de autoridades, tais como thesaurus) na etapa de entrada de dados com formatos de validação flexíveis e todas as interações são baseadas em tecnologia Web, naturalmente, permitindo, por exemplo, strings em código HTML para indexação do texto completo, hiperlinks para páginas de ajuda, etc. É perfeitamente possível automatizar totalmente uma pequena biblioteca, com a maioria dos usuários internos, com todas as funções necessárias, utilizando-se apenas esta parte central, como por exemplo: uma opção de busca avançada está incluída, de tal forma que todas as funções sejam cobertas com um mínimo de complexidade tecnológica (ou seja, apenas ISIS e PHP). ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#o-abcd-central",
    "relUrl": "/docs/introducao/#o-abcd-central"
  },"27": {
    "doc": "Introdução",
    "title": "O OPAC do ABCD (iAH)",
    "content": "A interface de pesquisa pública (OPAC) é uma versão adaptada da interface avançada de informações em saúde (iAH) da BIREME. Permite meta-pesquisas não só em catálogos locais, mas também em muitas outras fontes de informação. A interface iAH desenvolvida pela BIREME está sendo atualizada atualmente para iAHx, garantindo que estará perfeitamente alinhada com modernos conceitos e técnicas de Recuperação de Informação (por exemplo, agrupamento, relevância em ranking baseado na indexação Lucene). ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#o-opac-do-abcd-iah",
    "relUrl": "/docs/introducao/#o-opac-do-abcd-iah"
  },"28": {
    "doc": "Introdução",
    "title": "O Site ABCD",
    "content": "A função de pesquisa é oferecida como parte de uma página de portal “usuário final”, apresentando o(s) próprio(s) catálogo(s) em um contexto informacional muito mais amplo através do acesso a outros recursos informacionais (ex.: Google, Medline) e comunicação (anúncios, alertas), também abrindo o caminho para funções semelhantes à “Web 2.0”. O Administrador do Site é realmente um sistema de gerenciamento de conteúdo específico que permite elaborar o design da estrutura e dos componentes da página do portal. ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#o-site-abcd",
    "relUrl": "/docs/introducao/#o-site-abcd"
  },"29": {
    "doc": "Introdução",
    "title": "O Sistema de Controle de Periódicos do ABCD (SeCS)",
    "content": "Este módulo oferece uma avançada ferramenta de gestão para periódicos/revistas (clássicos e/ou eletrônicos) de qualquer tipo de publicação (referindo-se à periodicidade). Seriados como tal, mas também publicações de um seriado e de todos os tipos de padrões de publicação podem ser gerenciadas por este módulo. BIREME utiliza esta tecnologia, por exemplo, para os seus produtos ‘Portal de Revistas Científicas’ (veja: http://portal.revistas.bvs.br/main.php?home=true&amp;lang=en) e SCAD (veja: http://scad.bvs.br/php/index.php?lang=en) que é o Catálogo Coletivo Brasileiro de mais de 12.000 revistas (com milhares de fascículos) de mais de 50 bibliotecas. ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#o-sistema-de-controle-de-peri%C3%B3dicos-do-abcd-secs",
    "relUrl": "/docs/introducao/#o-sistema-de-controle-de-periódicos-do-abcd-secs"
  },"30": {
    "doc": "Introdução",
    "title": "O módulo avançado de Empréstimo do ABCD (EmpWeb)",
    "content": "Este módulo oferece gerenciamento avançado de empréstimos com mais alguns recursos extras para organizações maiores e mais complexas. Oferece uma função chamada ‘MyLibrary’ para os usuários finais através do OPAC e baseia-se em tecnologia de “web-services”. Ele pode ser usado para substituir o módulo integrado de empréstimos do ABCD em caso de necessidade de lidar com políticas “multi-branch” e situações de um volume de transações muito grande. A idéia de “suíte” reflete o fato de que ABCD tem partes relativamente independentes – como é o caso de suítes de automação comercial (por exemplo, Open Office, Microsoft Office) – mas com evidentes ligações ao processo de cooperar. O módulo Estatísticas, por exemplo, como parte do módulo de Circulação/Empréstimo, pode trabalhar com qualquer base de dados ISIS, enquanto o iAH-OPAC também pode oferecer avançada recuperação baseada na web em qualquer conjunto de bases de dados ISIS, não somente às mantidas pelo ABCD. O Sistema de Controle de Periódicos (SeCS) gerencia bases de dados ISIS, dentro ou fora do contexto ABCD. Mas, em conjunto, acreditamos, estas peças constituem uma poderosa suíte de ferramentas, bem como uma parte integrada, esperamos que “a soma é mais do que apenas as partes somadas”! . ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#o-m%C3%B3dulo-avan%C3%A7ado-de-empr%C3%A9stimo-do-abcd-empweb",
    "relUrl": "/docs/introducao/#o-módulo-avançado-de-empréstimo-do-abcd-empweb"
  },"31": {
    "doc": "Introdução",
    "title": "A família do software ISIS (história e visão geral)",
    "content": "Neste item, queremos fazer uma breve introdução, de forma mais ampla, à “família de software ISIS”, à qual pertence o ABCD. Tal como acontece com todas as “famílias”, os membros compartilham uma série de características, mas não todas. As características comuns da família ISIS, referem-se à maneira como as informações (de natureza textual) são armazenadas e gerenciadas, colocando-as em campos repetitivos de tamanho variável, com possibilidade de subdivisão de campos em subcampos. Os campos são, de fato, pares de um ID de campo (uma “tag”) combinado com um valor de campo (um texto, ou na mais recente geração ISIS, qualquer objeto, como por exemplo, “objetos binários grandes” ou bolhas). Além de características tecnológicas comuns, a maioria, se não todas as partes integrantes da família ISIS, também compartilham características “sociais”, por exemplo: * ser utilizada principalmente nos Países em Desenvolvimento ou “o Sul”, por exemplo, com uma presença muito forte na América Latina, mas também – mais do que pode ser “medido” em todos os tipos de centros de informação de pequeno porte, muitas vezes desprovidos, não conectados (sem Internet) na África e na Ásia; * sendo promovido por muitos membros e projetos das Nações Unidas, é claro antes de tudo em ambientes UNESCO, mas - como mostra o exemplo da BIREME - também a OMS e a FAO (o AGRIS e ASFISIS, sistemas da FAO podem ser dados como exemplos aqui, como também a origem do sistema de bibliotecas WEBLIS). As Nações Unidas IFAP e os programas da “Sociedade do Conhecimento” não deveriam subestimar o quanto de impacto real vem das ferramentas de informação promovidas pela UNESCO como o ISIS, IDAMS, Greenstone, etc. – às vezes até indicando que o impacto pode ser o inverso da dada entrada financeira ou publicidade. A ilustração a seguir resume a família completa até o momento. Podemos resumir a história, considerando que a “família” agora tem 4 gerações, enquanto que a 5 ª geração está sendo preparada: * A primeira geração: CDS/ISIS e Micro-ISIS; * A segunda geração: interfaces enriquecidas ISIS/Pascal, ferramentas CISIS; * A terceira geração: multimídia gráfica e multi-base de dados: WinISIS, ISISDLL; * A quarta geração: habilitada para WWW (versões WWWISIS, isis3w, OpenIsis). Do ponto de vista de algumas grandes mudanças tecnológicas introduzidas na nova geração a partir de 2008, talvez devêssemos considerar os mais novos membros ISIS (J-ISIS e ISIS NBP) como representantes de uma nova 5ª geração. Alguns destaques de cada geração são dados abaixo. 1975 - A primeira geração . 1975 - CDS/ISIS na Organização Internacional do Trabalho (OIT) o “Centralised Documentation System” fundiu-se com o “Integrated Set of Information Services” que rodava no VAX OS em mainframes (computadores de grande porte). 1985 - Micro-ISIS G. Del Bigio se une com UNESCO e cria a versão baseada em PC-DOS e integra funções separadas em uma interface geral customizável, multilíngue baseada em menu, com documentação completa, como Versão 2.3 Versão 3.0 - 3.8: multi-usuário em rede, versão UNIX ISIS/Pascal, para UNIX OS baseado em Intel. Distribuição mundial e de enorme sucesso nos Países em Desenvolvimento. 1985 - A segunda geração . | “add-ons” programados em ISIS/Pascal (por exemplo, Heurisko, ADEM, Iris e ODIN, LAMP) criam ferramentas ricas, por exemplo, IRBIS (Rússia) para bibliotecas, a FAO utiliza ISIS para seu sistema AGRIS e ODIN/IRIS extensões para o seu sistema ASFISIS; | Bireme/OPS (OMS Brasil) cria ferramentas CISIS, uma suíte para gerenciamento de bases de dados em linha comando, usando-a para suas enormes bases de dados de informação em saúde na Internet, que são multi-plataforma (rodam em Unix/Linux e DOS). | . 1995 - A terceira geração . | UNESCO produz a versão Windows: WinISIS, com muitos recursos gráficos, multimídia e multi-base de dados; | Sistemas completos de automação de bibliotecas podem ser e são desenvolvidas, por exemplo, Purna (Índia); | Outras bibliotecas começam a usar o ISIS para automação completa de bibliotecas, por exemplo SNAL (Tanzânia) usa o sistema de bibliotecas ODIN/IRIS baseado em rede para sua biblioteca universitária; | Bireme distribui uma versão de servidor web do ISIS como “WWWISIS”, executado em ambos DOS/Windows e UNIX/Linux, muitos aplicativos são desenvolvidos JavaISIS (Itália) e isis3w (Polônia), acrescentados à família. | . 2005 - A quarta geração . | Avançadas ferramentas baseadas na Web propiciam novos desenvolvimentos: GENISIS (França), que permite a criação fácil de interfaces Web de pesquisa; | WEBLIS (Polônia/FAO) é um avançado sistema web “full-fledged” de automação de bibliotecas; | Bireme desenvolve WXIS e adiciona XML para ISIS; | Sistemas de bibliotecas baseados em WXIS são desenvolvidas na América Latina (por exemplo, OpenMarcoPolo); | OpenIsis (Alemanha) cria a primeira versão totalmente Open Source (servidor web, PHP), mas segue seu próprio caminho (Malete, Selene). | . 2008 - A quinta geração . | UNESCO desenvolve uma interface gráfica baseada em Java completamente nova “J-ISIS”, usando não apenas tecnologia Java, mas também os BD Berkeley embutido para a camada de armazenamento. Este projeto é totalmente orientado pelo projeto FOSS (software livre); | BIREME desenvolve ABCD e - ao mesmo tempo - uma tecnologia totalmente nova para os seus futuros produtos: ISIS: ISIS/NBP. ABCD pretende ser a primeira aplicação a ser migrada para NBP. NBP ou “Network Based Platform” é a nova tecnologia ISIS com as características principais: | arquitetura flexível, na qual “células ISIS” irão se comunicar, através de protocolos conhecidos, com diversas plataformas e interfaces; células ISIS também irão permitir a utilização de modelos diferentes de armazenamento, visto que estes estarão contidos dentro das células, mas elas se comportam da mesma maneira padronizada no sentido da tecnologia externa utilizada; | bases de dados ISIS não terão mais limitações obsoletas em termos de tamanho de base de dados, registros e campos; | bases de dados ISIS serão compatíveis com Unicode; | a indexação será feita utilizando outros indexadores de texto completo FOSS como Lucene (da Apache Software Foundation). | . ISIS está sendo usado por dezenas de milhares de usuários, principalmente nos países em desenvolvimento onde é promovido pela UNESCO e BIREME (principalmente para a América Latina). Na América Latina ISIS é fortemente representado nas bibliotecas e centros de documentação (tem uma “posição dominante” mesmo aqui), na África e Sudoeste da Ásia há um número desconhecido, mas elevado de usuários, muitos destes não conectados à Internet e, portanto, ainda usando tecnologia mais antiga e com habilidades relativamente pobres em TIC. Isso cria um desafio especial para o suporte da comunidade de usuários. No 3 º Congresso Mundial de ISIS (Rio de Janeiro, Brasil, setembro de 2008), a Comunidade de Usuários decidiu tornar ISIS plenamente “software livre” e coordenado por um “International Coordination Committee on ISIS (ICCI)”, veja: http://portal.unesco.org/ci/en/ev.php-URL_ID=27760&amp;URL_DO=DO_TOPIC&amp;URL_SECTION=201.html. Resumindo a longa história de ISIS, pode-se dizer que o ISIS combina muito bem os princípios de base de dados “textuais” básicos, uma forte tradição, e uma comunidade mundial de usuários, mas insuficientemente coordenado, sem um moderno estado-da-arte do desenvolvimento tecnológico. ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#a-fam%C3%ADlia-do-software-isis-hist%C3%B3ria-e-vis%C3%A3o-geral",
    "relUrl": "/docs/introducao/#a-família-do-software-isis-história-e-visão-geral"
  },"32": {
    "doc": "Introdução",
    "title": "De “livre” para “FOSS”",
    "content": "Dica: Você pode estar interessado em ler o artigo completo sobre este tema, publicado em: “Inovation”, nº 36, junho 2008, p. 39-47. CDS/ISIS como um software tem sido “livre” e “aberto” desde seus primórdios, muito antes de “FOSS” (Free and Open Source Software) tornar-se um modelo conhecido de software (ou deveria ser colocada de forma inversa: muito antes do “software comercial fechado” tornar-se amplamente praticado). ISIS como software ‘aberto’ . Considerando que o ISIS, a partir da versão DOS, produzida e distribuída pela UNESCO desde 1985, sempre foi “livre” - ou seja, sem custo, mas com uma restrição: somente para setores sem-fins-lucrativos – o software não era “aberto” no sentido estrito do conceito, do hoje conhecido como “Open Source Software”, com suas diferentes definições (ver http://www.opensource.org/docs/osd) e licenças (por exemplo, (L)GPL, BSD, Creative Commons). Mas em 3 significados havia, já deste o início - e, portanto, muito antes do movimento de software livre começar a se tornar realmente visível -, os elementos de ser “aberto”, além de ser (software) livre: . | As normas estavam abertas e publicadas. No “CDS/ISIS Manual de Referência”, escrito pelo seu pai criador Gianpablo Del Bigio (trabalhando para OIT e depois UNESCO), os detalhes técnicos foram publicados nos anexos, permitindo que outros programassem as suas próprias versões do ISIS, utilizando os mesmos padrões compatíveis. Por exemplo, na Eslováquia Marek Smihla programou executáveis (por exemplo, ADEM para entrada de dados), que funcionou de forma independente dos executáveis ISIS da UNESCO e podia gravar e ler registros ISIS. Bireme, em São Paulo, Brasil, fez uma coisa semelhante: eles programaram em linguagem C (portanto CISIS) ferramentas com uma série de características avançadas de gravação, leitura e de indexação (por exemplo, “join” de bases de dados, linkando-as como relações, etc.), que ainda são a base para seus outros programas relacionados a ISIS: a DLL e os servidores web (WWWisis, WXIS) e que agora têm capacidade expandida, por exemplo, máximo de 4 GB de tamanho de bases de dados, registros 1 Mb de tamanho, 60 caracteres de chaves de índice. Cooperação com a UNESCO foi então estabelecida, por exemplo, permitindo que o “CDS/ISIS para Windows” tornar-se uma mistura de módulos programados pela UNESCO e módulos programados pela Bireme. | Uma interface aberta, ajustável: o software em si foi apresentado como um ambiente muito flexível, com três principais características que foram usadas intensamente em todo o mundo, não apenas para alterar a sua “interface”, mas também as funções e características. | Uma estrutura de menu aberta: Micro-CDS/ISIS foi totalmente baseada em menus que podiam ser produzidos e alterados, usando o próprio software em si, incluindo a definição de “ações” a serem invocadas por cada opção do menu e permitindo sub-menus hierárquicos, bem como opções de acrescentar/apagar. | Um sistema de mensagem aberto: todas as mensagens foram/são baseadas em pequenas bases de dados ISIS que podem ser editadas e expandidas (cada idioma tendo a sua própria base de dados de mensagens). Isto não só permite (muitas vezes em conjunto com a característica anterior de menu aberto) a criação de conformações bastante diferentes do software – tendo em conta também as cores e recursos de tela que podem ser mudadas – mas também a expansão e a introdução de parâmetros (que podem então ser “lidos” como mensagens) para softwares adicionais, executando internamente no ISIS (ver mais adiante: “add-ons” do ISIS/Pascal), amplamente utilizados, por exemplo, pela interface de catalogação “ODIN” e IRIS OPAC (pelo autor do presente artigo). | Uma ferramenta de programação “ISIS/Pascal”, que atuou como uma “API” (com publicação de chamadas para funções e seus parâmetros) dentro do CDS/ISIS. Programas ISIS/Pascal, variando de algumas linhas para milhares de linhas de aplicações sofisticadas, podiam ser incluídas no programa, quer seja como “format exits” (para expandir as funções da já muito rica Linguagem de Formatação) ou como “menu exits” para expandir as funções dos menus, permitindo quase interfaces independentes para “assumir” o ambiente CDS/ISIS na criação e manipulação de suas bases de dados. Uma característica que ilustra a “abertura” foi a possibilidade de acrescentar um parâmetro no arquivo de inicialização “SYSPAR.PAR” para invocar automaticamente um menu e suas opções, permitindo assim pular interface de menu e imediatamente apresentar a interface ISIS/Pascal. Desta forma completa OPAC (por exemplo, IRIS usando uma tela de boas-vindas, que podia ser invocada por um mecanismo de “time-out” após sair de uma sessão anterior) e módulos de busca em CD-ROM (Heurisko é um exemplo) foram escritas, sistemas de empréstimo para bibliotecas e ferramentas de gestão de tesauro foram produzidas. | Por último, mas não menos importante: o caráter “aberto” da linguagem de formatação. A linguagem de formatação é uma gramática usada para definir de forma detalhada como os elementos da base de dados, provenientes de campos e subcampos repetíveis, também de outros registros da mesma ou outra base de dados (assemelhando-se, portanto, com abordagens relacionais) e com links de navegação, serão “processados” em alguma saída (para visualização, ordenação, impressão, exportação). Foi largamente expandido com recursos gráficos na versão Windows (RichText mas também imagens e extra textos e caixas de imagem). Juntos, esta característica “poderosa” de processamento de dados e de apresentação da linguagem de formatação, permitiram a produção de novas “identidades” do software, por exemplo, como um software de automação de bibliotecas com OPAC e sistema de empréstimos (por exemplo, PURNA da Índia). Em aplicações correntes, baseadas em tecnologia web, a Linguagem de Formatação normalmente ainda é usada para produzir elementos HTML (por exemplo, os links, mas também as tabelas), mesmo se ferramentas mais dedicadas para isso, por exemplo, PHP, são acrescentadas ao poder da própria linguagem de Formatação ISIS. | . | . ISIS como completo software de código aberto . Já em 2001 a UNESCO decidiu embarcar nesta abordagem relativamente nova, não só o fornecimento gratuito do software, mas também tornar os códigos-fonte, em princípio, “abertos”, isto é, à disposição do público (ver: http://portal.unesco.org/ci/en/ev.php-URL_ID=13803&amp;URL_DO=DO_TOPIC&amp;URL_SECTION=201.html). Isso acabou por levar a um quadro de abordagem mais amplo do seu “Portal de software gratuito e Open Source”, promovendo a idéia e acrescentando outros softwares, por exemplo, Greenstone, à sua “cesta” de softwares apoiados e promovidos, para um melhor desenvolvimento profissional, também em países do Sul e transitórios. O Portal FOSS da UNESCO pode ser encontrado em: http://www.unesco.org/cgi-bin/webworld/portal_freesoftware/cgi/page.cgi?d=1, com links interessantes para discussões sobre a história do FOSS, licenças e estudos de caso. Na realidade, porém códigos-fonte para software ISIS existentes devem ser solicitados à UNESCO, mas os novos softwares estarão totalmente disponíveis em sites públicos. Na Bireme/OPS/OMS, uma decisão semelhante foi tomada em 2006/7. Já não iria cobrar a pequena taxa pelo seu software (como acontecia antes, por exemplo, de 150 dólares para o registro oficial como usuário com direitos a suporte e, portanto, torná-lo “livre”, mas também as fontes foram e ainda estão sendo preparadas para a publicação de todos os seus softwares, incluindo os módulos CISIS básicos. Seu software da nova de geração ISIS, chamado “ISIS-NBP” (Network Based Platform) seguirá métodos FOSS (incluindo uma “comunidade” com possibilidades de contribuir, discutir e fontes para download na URL http://reddes.bireme.br) para mostrar o seu compromisso firme com FOSS. Como o mais novo aplicativo completo, ABCD, será publicado na íntegra como código aberto, mesmo que o desenvolvimento original ainda seja gerido centralmente pela Bireme e seus próprios programadores, visto que o projeto é apoiado agora também pelo “Flemish Interuniversity Council (VLIR)” com os requisitos específicos para apresentá-lo como um concorrente pleno de outros sistemas de bibliotecas (incluindo outros softwares FOSS como KOHA e NewGenLib) e, para isso precisa algum controle mais central para fins específicos. A vantagem de se tornar totalmente fonte aberta - para todos os softwares - reside no fato de que os usuários, certamente os habilitados (programação), podem verificar os mecanismos internos e propor/fazer alterações, se assim for desejado. Um exemplo: WinISIS tem uma maneira ligeiramente diferente de ordenação de valores obtidos da função “VAL” (ou seja, removendo “padding” zeros primeiro), que não é um bug como tal e, portanto, não “necessita” ser corrigido pelo fornecedor do software, entretanto com acesso aos códigos fonte alguém poderia mudar isto. Como é sempre o caso com softwares de fonte aberta, seria melhor não fazer essas mudanças sem consultar/informar a “comunidade de desenvolvedores. ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#de-livre-para-foss",
    "relUrl": "/docs/introducao/#de-livre-para-foss"
  },"33": {
    "doc": "Introdução",
    "title": "Objetivos do ABCD",
    "content": "ABCD visa proporcionar uma ferramenta integrada de gestão de bibliotecas que abranja todas as principais funções de uma biblioteca, ou seja, aquisição, gestão de dados bibliográficos, gestão de usuários, gestão de empréstimo, controle de periódicos, pesquisa para usuário final em bases de dados bibliográficas locais e externos e portal da biblioteca. Não é a primeira vez na história e ambiente ISIS em que tal esforço tem sido empreendido. Open MarcoPolo, Clabel e - como um esforço mais avançado - WEBLIS são antecessores para o ABCD neste sentido. ABCD como uma ferramenta bibliográfica genérica e flexível . Como o próprio nome sugere, ABCD visa, no entanto, não apenas fornecer uma solução para bibliotecas, mas também para centros de documentação. Estes geralmente têm necessidades ligeiramente diferentes, por exemplo, têm mais coleções especializadas, maiores necessidades de conteúdo de divulgação (por exemplo, fornecendo resumos, utilizando tesauro, etc.) e requerem uma maior flexibilidade nas estruturas bibliográficas. Por esta razão ABCD não só tentou incluir funcionalidades de texto completo, mas foi concebido para oferecer uma solução mais aberta, permitindo que seja criada qualquer estrutura de campos e mantida no mesmo software. Através da tecnologia de base de dados ISIS em si, que é bastante flexível e não restritivo, estruturas bibliográficas podem ser criadas sem a necessidade de “normalizar” todos os elementos em uma série de tabelas ou relações (como é o caso da tecnologia de bancos de dados relacionais) e, na maioria dos casos, todos os elementos bibliográficos podem estar contidos em uma única base de dados - apenas para fins de otimização, ISIS pode esperar que seja implementada alguma abordagem semi-relacional como um sistema de bibliotecas. ABCD vem pré-configurado para algumas das principais normas bibliográficas, ou seja, MARC21, CEPAL e AGRIS. Mas repito: os mesmos mecanismos de interface e os formulários podem ser usados para criar e manter qualquer estrutura, seja bibliográfica ou não. Então, a fim de colocar os objetivos um pouco mais precisos: ABCD visa proporcionar uma ferramenta muito genérica/generalizável para gerenciamento de bibliotecas e centros de documentação. ABCD como uma ferramenta orientada para bibliotecários . Outro objetivo específico do ABCD é oferecer uma ferramenta para bibliotecários, em vez de técnicos de TIC. Isto é alcançado utilizando princípios de biblioteconomia e ciência da informação (em vez de princípios de computador ou de programação) como ponto de partida, mesmo na concepção das próprias bases de dados. Normalmente um registro bibliográfico é uma entidade real em uma base de dados ISIS, e não uma complicada série de elementos agregados através de “query” ou “join” a partir de várias tabelas (como em sistemas relacionais), porém preservando critérios como eficiência (na utilização de espaço, velocidade de operação). Cada entidade poderá posteriormente ser minuciosamente “moldada” pelos próprios bibliotecários com a utilização da Linguagem de Formatação ISIS (LF), que permite lidar com todos os elementos de uma entidade (por exemplo, uma substring de um subcampo de uma ocorrência de um campo específico ao nível de micro-detalhe) sem uma verdadeira programação - mesmo quando a LF permite certo grau de lógica de programação como “loop” e condições aninhadas - para a criação de qualquer formato de saída. Esta saída pode ser qualquer coisa como uma chave de ordenação, uma chave de indexação, um formato de tela ou - como é o caso, por exemplo, dados ISIS do ABCD embutidos em páginas web, ou qualquer outra linguagem, tais como XML. Muitas experiências de ensino com ISIS demonstram que bibliotecários são perfeitamente capazes de compreender e usar tudo isso, alcançando resultados avançados sem uma verdadeira programação. ABCD como uma ferramenta para países em desenvolvimento . ABCD visa fornecer a bibliotecários e profissionais da informação nos países em desenvolvimento uma ferramenta muito poderosa, que, no entanto, leve em conta algumas realidades específicas, tais como : . | baixa disponibilidade de competências em TIC: assim como com soluções anteriores baseadas em ISIS, bibliotecários são - em princípio - habilitados a resolver os seus problemas, evitando arquiteturas desnecessárias de software, permitindo mesmo assim flexibilidade dentro do software (por exemplo, através da Linguagem de Formatação); | baixa disponibilidade de banda larga e conectividade: usando modernas técnicas web, tais como AJAX e JavaScript, o tráfego de dados entre cliente e servidor é mantido no mínimo, permitindo ao computador local (“client-side”) processar os dados, tanto quanto possível, sem se referir sempre ao servidor, também o design gráfico é mantido bastante sóbrio, pela mesma razão. | . ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#objetivos-do-abcd",
    "relUrl": "/docs/introducao/#objetivos-do-abcd"
  },"34": {
    "doc": "Introdução",
    "title": "Atores e parceiros do ABCD",
    "content": "ABCD, como em todos os grandes projetos de software, é um esforço conjunto de vários atores e parceiros. Na URL a seguir é mantida uma lista dos principais atores e parceiros: http://reddes.bvsaude.org/projects/abcd/wiki/HallFame?version=20. A contribuição principal, obviamente, vem da Instituição Brasileira BIREME (ver http://www.bireme.br), que aproveitou toda a sua tecnologia baseada em ISIS para ser combinada em um produto de “culminância”, que é de fato o ABCD. Na verdade a idéia original deriva de seu atual diretor, o Sr. Abel Packer, que também dedicou generosamente tempo de trabalho e de seus programadores e gerentes de software. Uma menção especial é certamente apropriada para a Sra. Guilda Ascencio, Venezuela, que foi a principal programadora da parte central do ABCD, com seus módulos, baseado em seu próprio software “Orbital Documental”, no qual ela tinha provado que aplicações muito avançadas, combinando biblioteca e questões de gestão de outra documentação, pode ser construída, usando ISIS e tecnologia web. Ambos os autores deste documento têm agido como coordenadores do projeto de desenvolvimento do ABCD, tentando montar as muitas peças do quebra-cabeças – e ter certeza que a figura final do quebra-cabeças não só está mais ou menos correto, mas também de algum modo atraente. Dois outros parceiros institucionais também têm de ser mencionados: . | UNESCO: como explicado anteriormente na seção sobre a história do ISIS, é claro que a UNESCO tem um enorme mérito no desenvolvimento e promoção do ISIS. ABCD passará a fazer parte do conjunto de produtos ISIS promovidos pela UNESCO, mas através de um Memorando de Entendimento entre a UNESCO e BIREME, supervisão técnico pela BIREME será assegurada; | VLIR/UOS: a seção “‘Development Co-operation” do “Flemish Interuniversity Council” (VLIR, Bélgica, veja: http://www.vliruos.be ver ), por meio de um projeto “‘Development Of and Capacity Building in ISIS-Based Library Automation Systems’ (DOCBIBLAS), que é promovido pelo co-autor belga deste manual, selecionou ABCD como a solução de automação de bibliotecas que pretende promover com bibliotecas universitárias de seu parceiro no Sul (América Latina, África e Sudeste Asiático). | . ",
    "url": "https//abcdbrasil.github.io/docs/introducao/#atores-e-parceiros-do-abcd",
    "relUrl": "/docs/introducao/#atores-e-parceiros-do-abcd"
  },"35": {
    "doc": "Módulos ABCD",
    "title": "Módulos ABCD",
    "content": "O ABCD é composto por 3 módulos principais: central, circulação e aquisição. ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/",
    "relUrl": "/docs/modulos-abcd/"
  },"36": {
    "doc": "Módulos ABCD",
    "title": "Tabela de conteúdo",
    "content": ". | Introdução e configuração geral | Configuração de login do ABCD Central | Administração dos perfis de usuários do ABCD | Loging no sistema | Módulo Central: Administração de bases de dados | Administração de usuários | . ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#tabela-de-conte%C3%BAdo",
    "relUrl": "/docs/modulos-abcd/#tabela-de-conteúdo"
  },"37": {
    "doc": "Módulos ABCD",
    "title": "Introdução e configuração geral",
    "content": "Este capítulo aborda as principais funções do sistema ABCD. Como um software de automação de bibliotecas integrado, o sistema oferece ferramentas para gerenciamento de bases de dados (tanto para bases de dados bibliográficas/documentais como bases de dados administrativas, tais como de usuários, aquisições e empréstimos), entrada de dados, estatísticas, circulação, controle de periódicos e funções de pesquisa (OPAC em um ambiente de “portal”). Estas funções são apresentadas em diferentes partes de uma suíte, que são relativamente independentes uns dos outros, mas não totalmente. As partes são acessadas através de sua própria URL. Dentro de uma parte podem existir vários módulos que também cooperam entre si. Por exemplo, as informações de pré-catalogação produzidas para aquisições serão reutilizadas na base de dados de itens para o módulo de circulação, que por sua vez utiliza informações bibliográficas dos catálogos. Estatísticas podem ser aplicadas a qualquer base de dados ISIS, não somente à base de dados de circulação, Assim, esta função também irá aparecer em várias instâncias dentro do software. A tecnologia OPAC pode ser executada em qualquer base ISIS, não só nos catálogos do próprio ABCD. Por isso vai ser descrito como uma ferramenta relativamente independente, como será o caso com o Controle de Periódicos. Importante: . Como acessar as partes da suíte diretamente? . | Os primeiros seis módulos juntos constituem a parte ‘Central’ da suíte ABCD. Pode ser acessada pela URL http://[ServerURL]/central/index.php. “index.php” é opcional, se foi informado ao servidor web (Apache) que index.php é uma das páginas default na pasta (como é, por exemplo, também “index.html”). | O combinado OPAC-com-portal (site) pode ser acessado por http://[ServerURL]/site/index.php, com a página de administrador para este Site sendo http:// [ServerURL]/site/admin/index. php. | A parte de Controle de Periódicos deve ser acessada pela URL http:// [ServerURL]/secs-web/index.php. | EmpWeb pode ser acessado , se instalado, pela URL http://[serverURL]/empweb/ (note o tipo de barra aqui !) | . Para todas estas partes ou módulos do ABCD, dados de “start login” estão disponíveis publicamente, que precisam ser lidos a partir do arquivo “leiame.txt” ou “readme.txt” que vem com o pacote de instalação. É de responsabilidade do administrador de sistema substituir os dados de login do sistema pelos dados de login locais – e localmente controladas. ABCD gerencia o controle de quem pode acessar o sistema e com quais privilégios, através de um sistema de “perfis” (introduzido com a versão 1.0). Os perfis são conjuntos de módulos, bases de dados e formulários permitidos. Usuários ABCD (não usuários da biblioteca), então, serão atribuídos a um dos perfis definidos (ver “Administração de perfis de Usuários” na seção seguinte). ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#introdu%C3%A7%C3%A3o-e-configura%C3%A7%C3%A3o-geral",
    "relUrl": "/docs/modulos-abcd/#introdução-e-configuração-geral"
  },"38": {
    "doc": "Módulos ABCD",
    "title": "Configuração de login do ABCD Central",
    "content": "O arquivo configuração mais importante para o ABCD Central é o arquivo “config.php” na pasta /www/ htdocs/central . Discutimos alguns parâmetros gerais anteriormente (na seção sobre a instalação), como eles lidam com os diretórios de instalação e o idioma default a ser usado, mas no final são apresentados alguns parâmetros que fornecem uma solução de recuperação no caso de terem sido perdidos os dados de login do administrador geral do sistema (ou seja, ninguém mais consegue entrar no sistema!) . Estes parâmetros são: . //USE THIS LOGIN AND PASSWORD IN CASE OF CORRUPTION OF THE OPERATORS DATABASE OR IF YOU DELETED, BY ERROR, THE SYSTEM ADMINISTRATOR $adm_login=\"\"; $adm_password=\"\"; ENCRIPTYON (0=OFF 1=ON) $MD5=1; . Editando manualmente (por exemplo, com o Bloco de Notas ou outro editor ASCII) os parâmetros $adm_login e $adm_password, podem ser criados dados de login temporários, que permitirão a criação de dados de login reais novamente (usando as ferramentas de administração de bases de dados para a base de dados USERS). É altamente recomendado, imediatamente após, remover de novo os dados de login deste arquivo config.php - por razões óbvias de segurança. O parâmetro $MD5 faz com que a senha seja criptografada (usando o algoritmo MD5), quando colocado em “1” ou não, se colocado em “0”. ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#configura%C3%A7%C3%A3o-de-login-do-abcd-central",
    "relUrl": "/docs/modulos-abcd/#configuração-de-login-do-abcd-central"
  },"39": {
    "doc": "Módulos ABCD",
    "title": "Administração dos perfis de usuários do ABCD",
    "content": "A partir do menu principal central, opção “Administração de usuários”, pode-se entrar na opção “Criar/Editar perfis” para criar/editar apagar usuários do sistema. Alguns perfis vêm com a instalação do ABCD, como, por exemplo: . | Administrador do Sistema; | Administrador de Bases de Dados; | Operador de Bases de Dados; | Operador LIS. | . Como pode ser observado a partir desta tela, o administrador tem de informar os seguintes dados: . | Nome do perfil: qualquer nome (curto) para o novo perfil a ser criado; | Descrição do perfil: qualquer informação que descreva o perfil; | Para cada base de dados listada: se é ou não concedido acesso e quais planilhas de entrada de dados podem ser utilizadas por este perfil. Se todas, a opção “Todas” pode ser selecionada simplesmente; | Permissões: para cada módulo (Catalogação – Circulação – Aquisição) a opção de menu (ou função) que esse perfil pode ter acesso deve ser ativada (na caixinha). | . ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#administra%C3%A7%C3%A3o-dos-perfis-de-usu%C3%A1rios-do-abcd",
    "relUrl": "/docs/modulos-abcd/#administração-dos-perfis-de-usuários-do-abcd"
  },"40": {
    "doc": "Módulos ABCD",
    "title": "Loging no sistema",
    "content": "Após terem sido criados os perfis (ou adotados perfis padrão) e atribuídos usuários de sistema, qualquer login de usuários de sistema pode ser usado para entrar no mesmo. Ao contrário de versões anteriores do ABCD, não é mais necessário, obviamente, selecionar um nível de autorização quando efetuar o login, já que este está agora junto com o login em si. Portanto, além de nome de login e senha apenas o idioma a ser utilizado deve ser selecionado (esta lista é obtida no arquivo lang.tab da pasta “bases” do ABCD (default: /ABCD/www/bases). O valor é definido no arquivo de configuração geral “config.php” do ABCD-Central com o nome de parâmetro “$open_new_window”, que pode ser definido como “Y” (significando, após login o ABCD irá utilizar uma janela separada, que evita a interferência com outras guias, ou uso errado do botão “Voltar” do navegador) ou “N” para simplesmente abrir a janela do ABCD na mesma área. O outro parâmetro ligado a este comportamento em ‘config.php’ é “$context_menu” que também pode ser definido como “Y” ou “N” para, respectivamente, permitir ou não que a janela de menu seja invocada pelo clique do botão direito do mouse sobre o página - mais uma vez, isso pode evitar o uso errado do botão “Voltar” visto que a volta no ABCD deve ser preferencialmente realizada através de botões da interface, e não os do navegador que não têm o devido controle sobre certas questões de navegação do ABCD. Clicando na seta (“Ir/Entrar”) o usuário vai entrar no menu Central principal - ajustado às permissões do perfil. Todas as opções deste menu são discutidas nas próximas seções deste manual. Isto inclui a administração de usuários, ligando-os a um perfil, uma vez que a base de dados de usuários pode ser vista como apenas mais uma base de dados ABCD, para a qual ferramentas de administração geral de bases de dados do ABCD devem ser usadas. ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#loging-no-sistema",
    "relUrl": "/docs/modulos-abcd/#loging-no-sistema"
  },"41": {
    "doc": "Módulos ABCD",
    "title": "Módulo Central: Administração de bases de dados",
    "content": "Nesta seção, discutimos brevemente as principais técnicas de uma das funções mais poderosas do ABCD: a criação de novas bases de dados e a modificação de estruturas de bases de dados. Visto que bases de dados ISIS não requerem sofisticados estruturas relacionais “normalizadas” e mesmo assim podem lidar com relacionamento de elementos de muitos para muitos (como autores com publicações). ABCD pode ser usado para lidar com qualquer base de dados criada “localmente” com relativa facilidade. Recomendamos ABCD para ambientes onde várias aplicações tais como, por exemplo, repositórios institucionais, coleções patrimoniais culturais, vocabulários e ontologias, ou mesmo apenas “trechos” (unidades soltas de informação textual), são igualmente susceptíveis de serem criados e utilizados. Discutimos nas seções a seguir cada uma das opções apresentadas no menu principal de administração de bases de dados do ABCD: . Nota Este menu é criado no script PHP “homepage.php” da pasta “\\ABCD\\www\\htdocs\\php\", onde cada nível de login obtém a sua própria função para criar o menu (por exemplo, a função MenuAdministrador() para o Administrador do Sistema), assim, se é necessário alterar a sequência das funções deste menu, este arquivo pode ser editado por alguém que entende a codificação interna de HTML. Nós preferimos discutir as opções neste menu principal em uma sequência um pouco diferente (que também pode ser obtido no menu através da edição do acima mencionado script “homepage.php”), porque antes de qualquer coisa a Administração de Usuários deve ser realizada pelo menos uma vez para definir um Administrador do Sistema local e, provavelmente, alguns outros usuários do sistema. Em vista da importância da opção de menu “Entrada de Dados”, aqui uma seção específica deste manual será dedicada à mesma, seguindo a discussão das outras funções Centrais. Também os procedimentos a serem seguidos para criar cópias (exemplares) e objetos de empréstimo para as bases de dados “copies” (Números de registro) e “loanobjects” (itens para empréstimo) serão explicados nesta seção, visto que fazem parte da função de Entrada de Dados. ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#m%C3%B3dulo-central-administra%C3%A7%C3%A3o-de-bases-de-dados",
    "relUrl": "/docs/modulos-abcd/#módulo-central-administração-de-bases-de-dados"
  },"42": {
    "doc": "Módulos ABCD",
    "title": "Administração de usuários",
    "content": "A opção de Administração de usuários do menu principal de Administração de bases de dados do ABCD é um caso específico de administração de bases de dados, utilizando principalmente as técnicas gerais discutidas nesta seção, porém para uma base de dados específica, chamada “users”, na qual somente o administrador do sistema pode criar perfis e (“registrar”) novos usuários ou editar os mesmos. Nota IMPORTANTE! Antes de fazer qualquer coisa, o ABCD deve receber, usando esta opção de Administração de usuários, um novo administrador do sistema local, com seus dados de login! O login padrão “abcd/adm” é amplamente conhecido, visto que é publicado, assim, de fato, não oferece qualquer segurança! A seguinte tela de seleção de “Administração de Usuários” do menu Central principal irá mostrar 2 opções: . A segunda opção de administração de perfis é discutida em outro lugar. A opção de administração de usuários é apresentada, mostrando primeiro os usuários existentes (deve haver pelo menos um usuário “Administrador do Sistema!) e com as opções para editar estes, apagar ou adicionar (criar) um novo usuário. Ao clicar no ícone “editar registro” (o primeiro dos três apresentados para cada usuário: ) o registro com os dados do usuário será mostrado em um formulário de edição interativa: . Este formulário de edição tem as seguintes partes: . | nome do usuário, que pode ser um nome completo; | o login que deve ser usado na tela de login, geralmente um nome abreviado; | a seha para este usuário; | os perfis que foram criados e que podem ser atribuídos a este usuário. Um conjunto de perfis demo do ABCD vem incluído no pacote de instalação; | data de “expiração” para o usuário atual, no formato de data “normal” (tal como definida em config.php) e a data no formato ISO, obrigatória, que será criada automaticamente pelo próprio software; | Depois de editar o novo usuário o registro deve ser salvo e, então, imediatamente estará autorizado a utilizar o sistema. | . ",
    "url": "https//abcdbrasil.github.io/docs/modulos-abcd/#administra%C3%A7%C3%A3o-de-usu%C3%A1rios",
    "relUrl": "/docs/modulos-abcd/#administração-de-usuários"
  },"43": {
    "doc": "Tecnologia ABCD",
    "title": "Tecnologia ABCD",
    "content": "CDS/ISIS . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/",
    "relUrl": "/docs/tecnologia-abcd/"
  },"44": {
    "doc": "Tecnologia ABCD",
    "title": "Tabela de conteúdo",
    "content": ". | Bases de dados ISIS | CISIS | A ferramenta de referência MasterXross: MX | Ferramentas de Arquivo Invertido: mz, ifupd, ifkeys, ifload, ifmerge | Outras ferramentas CISIS | Linguagem de Formatação ISIS | A Linguagem de Formatação para apresentação de valores | A LF para definição de chaves de indexação | A LF para definição de chaves de classificação | A LF para conversão durante importação/exportação | A LF para instruções de validação | ISIS Script | ISIS NBP | PHP | JavaScript | JAVA, Groovy e Jetty | MySQL | YAZ | Apache | . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#tabela-de-conte%C3%BAdo",
    "relUrl": "/docs/tecnologia-abcd/#tabela-de-conteúdo"
  },"45": {
    "doc": "Tecnologia ABCD",
    "title": "Bases de dados ISIS",
    "content": "Bases de dados ISIS são arquivos em que as informações contidas nos registros numerados (MFN’s ou Master File Numbers) com valores (na maior parte textual) armazenadas em campos com uma “tag” (ou identificador numérico) e subcampos (com um identificador de um caractere). Subcampos, campos e registros são todos de tamanho variável e “ocorrências variáveis” variando de 0 (ausente) a qualquer número maior que zero ocorrências, com um máximo dependendo da tecnologia ISIS utilizada, mas na nova geração (em J-ISIS e ISIS NBP), sem limite. Os registros são estruturalmente descritos em um ‘cabeçalho’ para cada registro em si, em vez do cabeçalho de tabela usual em bases de dados relacionais. Ao fazer assim, ISIS reflete mais o conceito de que cada registro sendo um “documento” por si com a sua própria estrutura de “documento” de fato, como por exemplo, livros, artigos ou páginas web. Por isso, preferimos chamar ISIS uma “base de dados documental”, no qual os documentos são armazenados como um registro com estrutura e tamanho variáveis. Isto evita estruturas complicadas de estruturas relacionais “normalizadas”, que são muito eficientes no armazenamento de dados altamente estruturados, mas nem tanto para dados textuais semi-estruturados. Isto significa que os registros podem ser bastante polimórficos, ou seja, estruturalmente diferentes com quaisquer combinações de campos. Em princípio ISIS pode manipular registros bibliográficos, juntamente com os dados do usuário e dados transacionais (por exemplo, empréstimos) em uma única base de dados, mas por causa de capacidades “semi-relacionais” (recuperação rápida de qualquer parte de um registro em qualquer base de dados, o ISIS, em tempo de execução, ou seja, pela Linguagem de Formatação, criando a saída sem a necessidade de dispor destas “relações” a serem pré-definidas) aplicações ISIS normalmente irão utilizar poucas bases de dados, por exemplo, no ABCD apenas 3 ou 4 bases de dados (uma para as entidades bibliográficas, uma para os usuários, uma para as transações e, possivelmente, uma para itens) podem possibilitar rodar uma biblioteca completa. Na tecnologia ISIS “clássica” todos os registros de tamanho variável (com (sub-) campos contendo os valores) são armazenados em um arquivo “Master” (.MST) e as posições de registros são mantidas no arquivo de “Referência Cruzada” (.XRF), que pode ser visto como um índice normal de “primeira ordem” dos registros na base de dados. Registros novos e mesmo registros apenas editados são sempre anexados ao final do arquivo mestre e as referências no XRF são atualizadas de acordo, necessitando às vezes alguma “compactação” pela eliminação (de versões) de registros excluídos e/ou inativos. Todos os valores especificados por uma “Tabela de Seleção de Campo” (que usa a Linguagem de Formatação, permitindo, portanto, definição muito flexível e poderosa de elementos selecionados), são incluídos em um “Arquivo Invertido” de árvore B, que pode ser visto como um “dicionário” de termos com o “endereço” exato (Registro, tag do campo, ocorrência, posição dentro de ocorrência) associado. Isto permite recuperação muito eficiente, incluindo bases de texto integral, de qualquer elemento definido como sendo “recuperável”. ISIS foi um dos primeiros a oferecer bases de dados de texto integral, que se tornou popular somente décadas mais tarde. Este “Arquivo Invertido” (ou IF) tem várias componentes (com nodos arquivos N01/.N02 e folhas arquivos .L01/L02) para uma organização eficiente - porque, em determinadas aplicações com indexação intensivas o IF pode ser ainda maior do que o arquivo da base de dados em si! Então, tipicamente bases de dados ISIS contém cerca de 10 arquivos: um MST com XRF, os Arquivos Invertidos Árvore B e algumas tabelas de definição para os campos, os dados do formulário de entrada e de indexação. Tudo isso está mudando com as novas tecnologias de bases de dados introduzidas em 2009 com, por exemplo, J-ISIS: usa Berkeley DB, um tipo de armazenamento diferente em arquivos separados com as definições incorporadas nos principais arquivos de dados. Mas basicamente o conceito de pares “tag-valor” (um identificador e um conteúdo), em que é aplicada uma poderosa Linguagem de Formatação, baseada em campos, e acrescido de indexação de texto integral, continuam a ser o núcleo de bases de dados ISIS. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#bases-de-dados-isis",
    "relUrl": "/docs/tecnologia-abcd/#bases-de-dados-isis"
  },"46": {
    "doc": "Tecnologia ABCD",
    "title": "CISIS",
    "content": "CISIS é o software desenvolvido pela BIREME para manipular bases de dados ISIS através da linha de comandos em UNIX/Linux ou DOS/Windows. Este software foi escrito na linguagem de programação C e daí o nome desse membro da família ISIS. CISIS consiste principalmente de uma série de “utilitários”, ou seja, executáveis ativados por comandos que realizam todos os tipos de funções nas bases de dados ISIS, como criar registros, atualização e recuperá-los, atualização do arquivo invertido, importação e exportação e muitas outras funções, por vezes únicos na “Família ISIS”, por exemplo, juntar registros de diferentes bases de dados, de acordo com chaves comuns, indexação e pesquisa a partir de diferentes arquivos invertidos para uma base de dados. Atualmente CISIS como um conjunto de utilitários contém mais de 25 diferentes ferramentas ou executáveis. Como este não é um manual sobre CISIS, não trataremos de todas estas ferramentas, mas algumas são dignas de serem mencionadas, certamente também porque os usaremos para algumas funções off-line do ABCD. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#cisis",
    "relUrl": "/docs/tecnologia-abcd/#cisis"
  },"47": {
    "doc": "Tecnologia ABCD",
    "title": "A ferramenta de referência MasterXross: MX",
    "content": "A ferramenta MX é o principal utilitário CISIS, poderia facilmente ser batizado como “CDS/ISIS para linha de comando”, significando que a maioria das coisas que podem ser feitas com arquivos (M)estre e arquivos (X)rf - daí “mx” - com ISIS, também podem ser feitas com MX. Só para dar uma idéia, listamos os parâmetros aceitos pelo mx (como essa lista é apresentada quando se invoca o ambiente de linha de comando como a janela CMD do Windows ou a janela de um terminal em UNIX/Linux. Como pode ser visto, muitos são os parâmetros disponíveis, significando que mx é uma ferramenta extremamente poderosa para gerenciamento de bases de dados ISIS, mas que merece um manual e treinamento próprio! . | 1 “clássico” se refere à tecnologia ISIS desde a sua introdução na década de 1970 até à introdução do J-ISIS e ISIS NBP, em 2009. | 2 Este comportamento, necessário por causa do tamanho variável de registros, torna ISIS menos adequado para bases de dados muito dinâmicas, como aplicações transacionais (por exemplo, empréstimo). | . Um olhar sobre os vários parâmetros mostra que mx pode não só pesquisar bases de dados ISIS (bool =), mas aplicar “on-the-fly” Gizmo (substituição de strings) e conversão ANSI (ansi=), juntar campos de registros de diferentes bases de dados, mas identificadas pelas suas entrada IF (join= e jchk =), aplicar processos de entrada de dados (proc =) e operações de arquivo invertido. Como CISIS vem em diversas variações, de acordo com a capacidade das bases de dados e Chaves do Arquivo invertido pretendidas, temos que especificar que, para o ABCD só usaremos a variação ‘16/60 ‘ de mx e outras ferramentas CISIS. Isto pode ser verificado a partir das informações mx oferece quando invocado sem qualquer parâmetro, como ilustrado: . Os usos mais relevantes de mx neste contexto do ABCD são: Importação de registros ISO para uma base de dados ISIS, por exemplo, o comando: . mx iso=myISOrecords.iso create=mydb now -all tell=100 . Irá ler o arquivo myISOrecords.iso e criar uma base de dados ISIS ‘mydb’ sem esperar por qualquer entrada do usuário (‘now’ait) e sem mostrar qualquer informação na tela (-all), mas mostrando o progresso após cada 100 registros importados. Nota: No ABCD este comando é usado para importar uma quantidade maior de registros ISO para uma base de dados, visto que um número grande e, portanto, longo tempo de processamento poderia invocar o tempo limite (time-out) do servidor web, para interromper o processo. Indexar uma base de dados ISIS, por exemplo, o comando: . mx mydb ifupd/create=mydb fst=@mydb.fst stw=@mydb.stw now –all . Irá criar um “Arquivo Invertido” chamado “mydb” usando a base de dados mydb com as especificações de indexação constantes na FST “mydb.fst” e omitindo os stopwords listados no “mydb.stw”, novamente sem modo interativo ou de saída (now -all). Nota: No ABCD o mx é usado para criar um índice off-line no caso de – como é o caso frequentemente – a base de dados ser grande. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#a-ferramenta-de-refer%C3%AAncia-masterxross-mx",
    "relUrl": "/docs/tecnologia-abcd/#a-ferramenta-de-referência-masterxross-mx"
  },"48": {
    "doc": "Tecnologia ABCD",
    "title": "Ferramentas de Arquivo Invertido: mz, ifupd, ifkeys, ifload, ifmerge",
    "content": "Estas são ferramentas mais especializadas para gerar/atualizar o Arquivo Invertido ISIS com sua tecnologia de Árvore B (B-Tree) e suas partes (nodos e folhas) a partir da linha de comandos com velocidade um pouco mais otimizada e mais opções. Exemplo, intervalos de MFN podem ser definidos, chaves podem ser extraídos do LK (link), arquivos criados anteriormente (ifload), ou arquivos de nodos (ifmerge) da Árvore B (B-Tree), que podem ser balanceados, etc. Normalmente não é necessário usar estes recursos com ABCD, mas conhecendo as possibilidades existentes, especialmente no caso de bases de dados muito grandes, certamente são úteis. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#ferramentas-de-arquivo-invertido-mz-ifupd-ifkeys-ifload-ifmerge",
    "relUrl": "/docs/tecnologia-abcd/#ferramentas-de-arquivo-invertido-mz-ifupd-ifkeys-ifload-ifmerge"
  },"49": {
    "doc": "Tecnologia ABCD",
    "title": "Outras ferramentas CISIS",
    "content": "Outras ferramentas que podem ser apenas mencionadas brevemente são: . | retag: esta ferramenta irá mudar as etiquetas (tags) dos campos de acordo com uma determinada especificação - que pode ter instruções sobre muitos campos em uma execução | mfcrunch e ifcrunch: para converter os arquivos ISIS (resp .MST e arquivos IF) de DOS/Windows para Unix/Linux e v.v. | mkxrf: para recriar o arquivo .XRF para uma determinada base de dados, caso este tenha sido perdido ou danificado - a ferramenta irá analisar o arquivo MST e atribuir registros XRF ao arquivo .XRF. | ctlmfn: para editar os valores do “registro de controle” da base de dados, no qual o maxMFN e outros valores muito técnicos para a base de dados são armazenados - só para os peritos! | . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#outras-ferramentas-cisis",
    "relUrl": "/docs/tecnologia-abcd/#outras-ferramentas-cisis"
  },"50": {
    "doc": "Tecnologia ABCD",
    "title": "Linguagem de Formatação ISIS",
    "content": "A Linguagem de Formatação ISIS (LF é uma das peças mais importantes do software porque oferece aos gerentes ISIS a possibilidade de definir exatamente o que ISIS irá produzir como saída de bases de dados em vários estágios do software, por exemplo: . | o que ISIS irá mostrar na tela, ou seja, apresentar (definido no tabela de formato de impressão ou PFT); | o que ISIS irá utilizar para a criação de chaves de indexação (definido na coluna 3 da Tabela ou Seleção de Campo (FST)); | o que ISIS irá utilizar para classificar os registros; | o que ISIS irá utilizar como valores exportados (definido na FST de reformatação); | o que ISIS irá usar como valores para validar a entrada de dados em campos (indicados nas tabelas de validação). | . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#linguagem-de-formata%C3%A7%C3%A3o-isis",
    "relUrl": "/docs/tecnologia-abcd/#linguagem-de-formatação-isis"
  },"51": {
    "doc": "Tecnologia ABCD",
    "title": "A Linguagem de Formatação para apresentação de valores",
    "content": "Esta é de longe a mais importante função da Linguagem de Formatação: especificando exatamente quais dados precisam ser tomados e como serão “exibidos” ou “impressos” (para a tela, para uma impressora, para um arquivo, para uma página da web ). Existem documentos separados para lidar com esta linguagem extensa, por exemplo, o capítulo dedicado no Manual de Referência ISIS, publicado pela UNESCO (Junho de 2004, capítulo 8, p. 94-122). Basicamente, existem três tipos de declarações na LF ISIS: . | a) valores de campos, dados como: Vx, onde “V” representa o valor (ou “conteúdo”) de um campo com a tag “x”, Vx^a é o valor de um subcampo (^a), do campo x e (Vx/) é o conjunto de todas as ocorrências do campo x separados por uma “nova linha” (/), desde que o parêntese abrace um “grupo repetitivo” de instruções para serem aplicadas a todas as ocorrências (campos repetitivos são uma característica forte e especial do ISIS). | b) literais ou strings, que podem ser ‘incondicionais’ (aspas simples), |condicionais| (barras verticais – pipes - indicam que a string só será produzida se o campo relacionado está presente) e “repetitivo” (aspas duplas só irá produzir a string na primeira ocorrência de um campo repetitivo). Aplicativos ISIS na web, como o ABCD, criam páginas web com tags HTML, utilizando este método de acrescentar literais aos valores dos campos, por exemplo, | . '&lt;table&gt;&lt;tr&gt;&lt;td&gt;' Vx '&lt;/td&gt;&lt;td&gt;' Vy '&lt;/td&gt;&lt;/tr&gt;&lt;/Table&gt;' . Irá exibir respectivamente os campos X e Y em duas colunas de uma tabela em HTML. Note que todos os códigos HTML são cotados (como incondicionais) e os valores extraídos dos campos da base de dados são inseridos referindo-se a eles com a instrução V. | c) comandos, que podem ser de diferentes tipos, por exemplo: . | comandos de Modo: mhl/u (modo cabeçalho em minúsculas/maiúsculas), mdl (modo de dados maiúsculas/minúsculas) ou mpl/u (modo de revisão maiúsculas/minúsculas); . | (em ambientes Windows): comandos de definição de atributos de tela (cores, fontes, caixas) ou links (solicitando ao sistema operacional para abrir outros dados, por exemplo, dados multimídia referenciados em um registro), por exemplo LINK (‘clique aqui para o texto integral’, OPENFILE Vx) irá pedir - quando o usuário clica no texto de hiperlink, ‘clique aqui para o texto integral’ - ao Windows para abrir o arquivo cujo nome está em Vx, com o aplicativo Windows associado à extensão do arquivo; | o comando REF, que pode recuperar dados de outros registros (no mesmo ou em outra base de dados quando expressamente referenciada), permitindo implementar semi-relações em aplicações ISIS (mas com a vantagem de que a relação é estabelecida apenas em tempo de execução, quando requerida), por exemplo, Ref ([ ‘users’]) L ([ ‘users’]) V2, V1) irá recuperar o valor do campo 1 na base de dados ”users” se a função L(ookup) tenha encontrado o valor do campo 2 (na base de dados ativa) no índice da base de dados “users”, de modo que o MFN do registro possa ser identificado; | declarações de roteamento condicional: por exemplo, construção ‘IF … THEN … (ELSE. …) FI’ ou mesmo o ‘SELECT [case1 case2 …]; | ElSECASE … ENDSEL pode ser usado para aplicar a formatação apenas às declarações de valores da base de dados que cumpram determinadas condições; | | no ambiente CISIS declarações extras da LF estão disponíveis, o mais importante é um comando que realmente irá processar um registro para alterar o conteúdo dos campos. A sintaxe geral é: proc(x | y..) onde x ou y pode ser qualquer um dos seguintes: ‘Dxxx’ (para apagar o campo com tag xxx) - | Axx# | valor | # | (para agregar o valor xx ao campo); | . | As funções, principalmente para operações de “strings” (por exemplo, substr, tamanho, valor) ou numéricas (por exemplo, rmin rmax, rsum …); | A documentação completa sobre a Linguagem de Formatação está disponível, por exemplo, em “CISIS-Linguagem Formato” publicado pela BIREME. | . | . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#a-linguagem-de-formata%C3%A7%C3%A3o-para-apresenta%C3%A7%C3%A3o-de-valores",
    "relUrl": "/docs/tecnologia-abcd/#a-linguagem-de-formatação-para-apresentação-de-valores"
  },"52": {
    "doc": "Tecnologia ABCD",
    "title": "A LF para definição de chaves de indexação",
    "content": "A mesma Linguagem de Formatação (LF), mas é claro sem efeitos de aparência relacionados, pode ser usada para definir exatamente quais os valores devem ir para o Arquivo Invertido do ISIS. Isso será definido na terceira coluna da “Field Select Table” onde o formato de extração usando a LF deve ser usado. Veja também a discussão sobre a definição da FST no capítulo sobre definição e gestão de bases de dados deste manual. Visto que a Linguagem de Formatação completa - exceto elementos gráficos - está disponível, a função REF, por exemplo, pode ser usada para ter no arquivo invertido valores diferentes do conteúdo de campo atual, mesmo de outra base de dados. Isto, por exemplo, pode ser utilizado para substituir os códigos por sua descrição completa ou vice-versa. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#a-lf-para-defini%C3%A7%C3%A3o-de-chaves-de-indexa%C3%A7%C3%A3o",
    "relUrl": "/docs/tecnologia-abcd/#a-lf-para-definição-de-chaves-de-indexação"
  },"53": {
    "doc": "Tecnologia ABCD",
    "title": "A LF para definição de chaves de classificação",
    "content": "O mesmo raciocínio pode ser aplicado para a definição das chaves que ISIS irá utilizar para classificar registros: mais uma vez os valores reais de classificação podem ser processados com valores provenientes de valores do campo atual, usando a LF. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#a-lf-para-defini%C3%A7%C3%A3o-de-chaves-de-classifica%C3%A7%C3%A3o",
    "relUrl": "/docs/tecnologia-abcd/#a-lf-para-definição-de-chaves-de-classificação"
  },"54": {
    "doc": "Tecnologia ABCD",
    "title": "A LF para conversão durante importação/exportação",
    "content": "Durante a importação/exportação de registros, a maioria das aplicações ISIS permitirá a utilização de uma FST de “reformatação”, que tem na terceira coluna, a definição exata do que deve ser exportado/importado, e na primeira coluna a tag (o “Identificador”) a ser atribuída a esse valor. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#a-lf-para-convers%C3%A3o-durante-importa%C3%A7%C3%A3oexporta%C3%A7%C3%A3o",
    "relUrl": "/docs/tecnologia-abcd/#a-lf-para-conversão-durante-importaçãoexportação"
  },"55": {
    "doc": "Tecnologia ABCD",
    "title": "A LF para instruções de validação",
    "content": "A Linguagem de Formatação também pode ser usada para criar mensagens de erro, no caso de condições definidas são (ou não) satisfeitas. Estas condições serão verificadas quando gravar os dados inseridos em um formulário (planilha) de entrada de dados no registro. ABCD oferece esta técnica, por default, como explicado na seção sobre validação de registros. Um exemplo pode novamente esclarecer isso facilmente: . if a(Vx) then ‘Este campo é obrigatório, por favor, verifique!’ . Essa declaração vai produzir, na tela, a mensagem “Este campo é obrigatório, por favor, verifique!” se o valor do campo com tag x não existir ou está a(usente). Instruções mais sofisticadas podem ser usadas para obter qualidade de verificação mais avançada/consistente, por exemplo, usando um “SELECT”, ou mesmo verificando o valor em outra base (com a anteriormente discutida função “REF”) para ver se é uma entrada válida. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#a-lf-para-instru%C3%A7%C3%B5es-de-valida%C3%A7%C3%A3o",
    "relUrl": "/docs/tecnologia-abcd/#a-lf-para-instruções-de-validação"
  },"56": {
    "doc": "Tecnologia ABCD",
    "title": "ISIS Script",
    "content": "ISIS Script é uma linguagem de script, desenvolvida pela BIREME, a fim de tornar mais forte as funções disponíveis para o servidor WEB ISIS “WWWISIS” para criação de páginas com elementos de Bases de dados ISIS. ISIS Script de fato foi um dos principais elementos na evolução de WWWISIS para “WXIS” que é o servidor web subjacente para o ABCD. Scripts de ISIS script são armazenados como arquivos com a extensão .XIS. ABCD usa mais de 100 scripts, a maioria deles na pasta php/dataentry/wxis mas também o iAH (o OPAC) faz amplo uso de tais scripts. Obviamente não se pode discutir todo o poder da linguagem de ISIS Script aqui. Como uma linguagem, usa instruções semelhantes a XML, como, por exemplo, entre as tags &lt;pft&gt; e &lt;/pft&gt; pode ser colocado um formato de impressão e esse formato pode ser apresentado, colocando-o entre as tags &lt;display&gt; e &lt;/display&gt;. Todos os parâmetros WXIS podem ser definidos dentro das tags &lt;parm&gt; e &lt;/parm&gt; e campos podem ser definidos com valores, por exemplo &lt;field action=\"replace\" tag=\"6000\"&gt; valor_do_campo_6000 &lt;/field&gt; vai colocar a string “Valor_do_campo_6000” no campo de tag 6000 (tais valores elevados de tag, na verdade todas as tags acima de 999, são utilizadas em geral em aplicativos ISIS para valores temporários internos que na realidade não são armazenados em registros ISIS, mas como “registros virtuais”. ISIS Script permite uma manipulação mais flexível de elementos de dados, provenientes de bases de dados ISIS, em páginas web. Em combinação com o PHP (veja a seção dedicada a PHP), que é uma linguagem para criação de páginas web, resultados sofisticados são possíveis e isto certamente contribui para a funcionalidade geral avançada do ABCD. É claro que mais detalhes sobre a linguagem ISIS Script podem ser encontradas na documentação específica. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#isis-script",
    "relUrl": "/docs/tecnologia-abcd/#isis-script"
  },"57": {
    "doc": "Tecnologia ABCD",
    "title": "ISIS NBP",
    "content": "ISIS NBP é a abreviação de “ISIS Network Based Platform”, a nova tecnologia que BIREME está desenvolvendo para ISIS com o objetivo de lidar com as novas demandas de software mais modernas, tais como: . | compatibilidade com UNICODE: a capacidade de não só utilizar caracteres definidos na tabela ASCII (com o seu limitado número de 128 caracteres fixos e 128 variáveis de definições), mas de fato caracteres de qualquer alfabeto, como chinês, árabe, amárico, vietnamita; | bases de dados e registros de tamanho ilimitado, dependendo de limitações de hardware e não de software; | indexação de texto completo e recuperação com saída classificada, tal como fornecida pela “Lucene Indexing” (da Apache Software Foundation); | a possibilidade de fornecer células completamente diferentes, ou seja, conjuntos de um mecanismo de armazenamento, juntamente com (empacotado na mesma “membrana” da célula) alguns protocolos para acessar os dados nas bases de dados, por exemplo, “Comando-driven”, cgi, http, etc., para que ISIS não mais seja limitado a um único mecanismo de armazenamento de bases de dados; ISIS NBP está atualmente em desenvolvimento, utilizando principalmente a linguagem de desenvolvimento Python. ABCD será o primeiro membro da família ISIS a ser migrado para NBP. | . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#isis-nbp",
    "relUrl": "/docs/tecnologia-abcd/#isis-nbp"
  },"58": {
    "doc": "Tecnologia ABCD",
    "title": "PHP",
    "content": "PHP é uma linguagem “Hypertext Pré-processing”, o que significa que é uma linguagem de programação para páginas web. Como um dos produtos de sucesso “FOSS” é hoje muito popular e largamente utilizado, frequentemente em combinação com o Apache e banco de dados MySQL. Isto tem mesmo levado a pacotes como o “WAMP” e “EasyPHP” (Windows, Apache, MySQL e PHP), que permitem instalar esses softwares, muitas vezes combinadas em um pacote. Como de costume, há algumas críticas sobre o PHP como uma linguagem, mas o fato é que é muito popular e está ficando cada vez mais poderosa com cada lançamento. ABCD usa, por exemplo, também “controles” ou módulos prontos disponíveis para funções específicas, que estão livremente disponíveis. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#php",
    "relUrl": "/docs/tecnologia-abcd/#php"
  },"59": {
    "doc": "Tecnologia ABCD",
    "title": "JavaScript",
    "content": "O nome oficial do JavaScript é “ECMA Script”, mas o JavaScript é o nome popular de uma tecnologia que é hoje utilizada em muitas páginas web: relativamente pequenos programas incorporados ao códigos das páginas HTML. Contrariamente ao nome, a linguagem realmente não está ligada à linguagem de programação JAVA. JavaScript hoje em dia é suportado por todos os atuais navegadores web e não precisa de nenhum software adicional ou configuração. No entanto, continua a ser uma opção que também pode ser desligada (por exemplo, no Firefox: Ferramentas|Opções|Conteúdo, onde ambos JavaScript e Java podem ser desabiblitados), para se certificar de que a opção JavaScript está habilitado para o uso do ABCD. ABCD utiliza ”scripts” de JavaScript dentro de suas páginas em muitos e muitos casos, uma razão é que, ao fazer assim, o computador local pode processar dados sem a necessidade de tráfego intenso entre o servidor e o cliente (o que é importante em condições de conectividade lenta). Como exemplo de um JavaScript simples podemos nos referir ao script “lrtrim.js” (na pasta ABCD\\ABCD\\www\\htdocs\\php\\dataentry\\js), que é chamado a partir de várias páginas ABCD-PHP. O script retira espaços em branco à direita ou à esquerda de strings. Isto pode perfeitamente ser feito localmente, sem a necessidade de envio da string para o servidor juntamente com o pedido de retirada e depois enviando de volta do servidor. Portanto, o script é carregado em uma página ABCD e executado localmente. Também módulos JavaScript existentes e disponíveis frequentemente estão sendo usados, por exemplo, para a função de calendário no módulo de Empréstimo ou para o “Editor HTML” (FCKEditor.js). Abaixo um exemplo de calendário é mostrado, com base no JavaScript “Popcalendar.js” que pode ser encontrado, por exemplo, na pasta php/loans/js da pasta “home” ABCD (/ABCD/www/htdocs). Esta pequena ferramenta exibe qualquer mês do calendário e permite a marcação dos feriados para levá-los em conta no cálculo do período de empréstimos! A maioria das funções JavaScript, no entanto, não são visíveis na tela, mas desempenham funções úteis dentro de páginas web do ABCD. Assim, mesmo que ferramentas como as acima mencionadas (o editor HTML ou do calendário) sejam consideradas desnecessárias, ainda é importante para manter a opção de executar o JavaScript no seu navegador em “on”. Assim como com o Java, esta opção, por exemplo, no Firefox pode ser verificado no menu Ferramentas|Opções|guia de conteúdo (no Internet Explorer deve-se ativar para scripts ativos na seção da zona de segurança “Internet” em Ferramentas|Opções da Internet|Segurança). ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#javascript",
    "relUrl": "/docs/tecnologia-abcd/#javascript"
  },"60": {
    "doc": "Tecnologia ABCD",
    "title": "JAVA, Groovy e Jetty",
    "content": "JAVA é ao mesmo tempo uma linguagem de programação (como por exemplo, “C++”) e um “compilador em tempo de execução”, o que significa que programas escritos em JAVA, precisam de uma versão Java de “Run Time Environment” (RTE), que irá compilar o programa para determinado sistema operacional e combinação de CPU em tempo de execução (ou seja, quando o usuário executa o programa). Fazendo assim, os programas Java são completamente “multi-plataforma” (Windows, UNIX, Linux, OS/X) porque tais RTE’s existem para todas as plataformas e estão disponíveis gratuitamente para instalação. Portanto, verifique se o seu computador tem a sua própria RTE JAVA instalada! Ambos Sun (o fornecedor Java real) e Microsoft oferecem versões gratuitas de Java. ABCD usa JAVA apenas para o “módulo avançado de empréstimo”, que vem com uma opção extra (ver o capítulo sobre o módulo de Circulação). Este módulo avançado de gerenciamento de circulação é destinado apenas para as instituições com regras mais complexas de circulação e múltiplas setoriais, com suas próprias políticas de empréstimo ou com bases de dados de usuário em outros formatos (por exemplo, SQL). Também funções de estilo “MinhaBiblioteca” mais interativas podem ser oferecidas. A fim de permitir estas combinações mais complicadas dos softwares, ABCD chama Java para fornecer “web-services” e os links com banco de dados de outros modelos. Groovy é uma linguagem de programação orientada a objetos para a plataforma Java, que pode ser utilizado como uma linguagem de script para a plataforma Java. O módulo avançado de empréstimo do ABCD (EmpWeb) também usa tecnologia Jetty, que é um servidor http Server e recipiente de “Servlet” escrito em Java. Jetty pode ser usado como: . | um servidor web tradicional autônomo para conteúdo estático e dinâmico; | um servidor de conteúdo dinâmico por trás de um servidor HTTP dedicado como o Apache, usando “mod_proxy”; | um componente incorporado em um aplicativo Java. | . ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#java-groovy-e-jetty",
    "relUrl": "/docs/tecnologia-abcd/#java-groovy-e-jetty"
  },"61": {
    "doc": "Tecnologia ABCD",
    "title": "MySQL",
    "content": "MySQL é um banco de dados relacional desenvolvido como FOSS, mas com um esquema de ‘licença dupla, permitindo tanto aplicativos comerciais como gratuitos. Atualmente o MySQL foi adquirida pela Sun Microsystems, um forte defensor de software FOSS, por exemplo, JAVA. Recentemente, a Sun Microsystems foi retomada pela Oracle, assim o futuro não é tão claro. Como um banco de dados, MySQL tornou-se extremamente popular devido à sua facilidade de uso e empacotamento combinado com, por exemplo, Apache e PHP para facilitar a implantação de bases de dados orientadas para websites. Exemplos de tais pré-embaladas combinações de Apache/PHP com MySQL são: EasyPHP (http://www.easyphp.org) e WAMP para Windows ou XAMP para Linux (http://www.wampserver.com). Ambos são Open Source e de uso livre (licença GPL). Os críticos alegam que suas qualidades “relacionais” ainda estão atrasadas - mesmo que tenha melhorado muito nos últimos tempos – comparado ao exemplo de PosgreSQL ou certamente aos principais bancos de dados relacionais como Oracle ou IBM DBII. Alguns outros pacotes de automação de bibliotecas estão usando completamente o MySQL para a base de dados, sendo KOHA o mais conhecido (apesar de que atualmente KOHA prevê mudar para outro tipo de banco de dados, ou seja, “Zebra” justamente para evitar limitações do MySQL, para fins de biblioteca. A parte ‘SQL’ do nome significa “Standard Query Language”, denotando uma gramática padrão para recuperação de dados a partir de relações (tabelas relacionadas), baseando-se, porém, fortemente em sua estrutura relacional. Por esta razão, por exemplo, ISIS não utilizar o SQL visto que não armazena seus dados em tabelas com células e estruturas fixas. MySQL será usado no ABCD apenas no módulo de “Empréstimos Avançado”, que é um módulo extra não-padrão (consulte o capítulo sobre o módulo de empréstimo neste manual). Será usado para armazenar as transações do sistema de empréstimo, visto que estes são dados administrativos, que podem ser tratados de forma mais eficiente por esse tipo de base de dados, em comparação com ISIS com todos os seus recursos - neste caso, desnecessários - flexibilidade e baseada em texto. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#mysql",
    "relUrl": "/docs/tecnologia-abcd/#mysql"
  },"62": {
    "doc": "Tecnologia ABCD",
    "title": "YAZ",
    "content": "YAZ é um software disponível livremente para a incorporação do protocolo Z39.50 nas aplicações. Z39.50 é usado como um protocolo para recuperar dados de outros catálogos, principalmente em formato MARC. ABCD usa YAZ para a sua função “Z39.50” no módulo de catalogação. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#yaz",
    "relUrl": "/docs/tecnologia-abcd/#yaz"
  },"63": {
    "doc": "Tecnologia ABCD",
    "title": "Apache",
    "content": "Apache é o nome do software do servidor web muito utilizado em servidores web “open source”. De fato, estamos falando de um software chamado “httpd”, que é apenas um produto da poderosa “Apache Software Foundation”, que também fornece outros produtos interessantes, como por exemplo Indexação Lucene (que também vai ser utilizado nas próximas versões do ABCD), Tomcat (um Servlet Java e Servidor “Server Pages”) e Derby DB. Apache, como um servidor web, parece ser o mais amplamente utilizado atualmente na Internet, que é um dos (poucos) exemplos em que o software livre domina sobre as soluções comerciais oferecidas. Todas as informações sobre o servidor web Apache e arquivos para baixar podem ser encontrados na URL: http://www.apache.org. Em muitos casos, o software servidor web Apache já estará instalado no servidor onde ABCD irá residir, como também provavelmente é o caso do PHP (e MySQL). Por esta razão ABCD virá com dois pacotes, um incluindo Apache e PHP e outro sem os mesmos. No caso de um servidor web Apache existente, alguém com conhecimentos sobre o Apache deve estar disponível para integrar ABCD com as aplicações existentes baseados no Apache. Por exemplo, um servidor virtual para ABCD poderia ser criada com “aliases” específicos para o sistema ABCD (home do htdocs) e cgi (pasta de scripts). No caso do pacote completo, a versão http Apache mais recente “estável” será incluída, pré-configurada para trabalhar com ABCD como ‘localhost’ (que significa: o próprio PC roda tanto o cliente como o servidor). Um pequeno script irá iniciar o serviço httpd (ou Apache) com base nesta configuração, de modo que os esforços de instalação e configuração, em princípio, podem ser reduzidos ao mínimo indispensável. Em caso de configuração adicional ainda necessária, o usuário deve estar plenamente consciente do fato de que o Apache, como um software baseado em Linux, é “case-sensitive” para seus parâmetros e nomes de arquivos (com as informações de caminho)! Em relação aos servidores web, devemos mencionar “IIS” (Internet Information Services) da Microsoft, software gratuito, mas não livre, que é o servidor web que vem com o Windows. As diferenças estão principalmente na forma como deve/pode ser configurado e gerenciado, em vez de em desempenho, segurança, etc .. A terminologia é um pouco diferente (por exemplo, ‘aliases’ são chamados de “pastas virtuais” e não há arquivo de configuração ASCII facilmente acessível, como no Apache e seu “httpd.conf”). ABCD funciona perfeitamente com IIS, como acontece com outros softwares de servidor web (por exemplo, Xitami), mas esse manual não suporta a implementação no IIS. ",
    "url": "https//abcdbrasil.github.io/docs/tecnologia-abcd/#apache",
    "relUrl": "/docs/tecnologia-abcd/#apache"
  }
}
